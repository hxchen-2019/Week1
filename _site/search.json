[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "Welcome to  IS415 Geospatial Analytics and Applications \nThis is the course website of IS415. I am studying this term and I want to die."
  },
  {
    "objectID": "lessons/In-class/in-class_ex2/In-class_Ex02.html",
    "href": "lessons/In-class/in-class_ex2/In-class_Ex02.html",
    "title": "In Class Excercise 2",
    "section": "",
    "text": "Note\n\n\n\nInstalling all the different packages\n\n\n\n\nShow the Code\npacman::p_load(sf, tidyverse, funModeling)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe want to import the RGA data file\n\n\n\n\nShow the Code\ngeoNGA <- st_read(\"data/geospatial/\", layer = \"geoBoundaries-NGA-ADM2\") %>%\n  st_transform(crs = 26392)\n\n\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\In-class\\in-class_ex2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\n\n\nNote\n\n\n\nSame Information being loaded but from different sources. They have the same number of observable records but different number of variable. This data is preferred as the data provide State Data and LGA as well.\n\n\n\n\nShow the Code\nNGA <- st_read(\"data/geospatial/\", layer = \"nga_admbnda_adm2_osgof_20190417\") %>%\n  st_transform(crs = 26392)\n\n\nReading layer `nga_admbnda_adm2_osgof_20190417' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\In-class\\in-class_ex2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThere is 2 function i the read_csv function tehre is 2\n\n\n\nwp_nga <- read_csv(\"data/aspatial/Wpdx.csv\") %>% \n  filter(`#clean_country_name` == \"Nigeria\")\n\n\n\n1) For\n\n\n\n\n\n\nNote\n\n\n\nYou can take the latitude degree and the longitude degree to convert sf point. (Please reference Hands on Excersie 2 for the code).\nNew Georeference Column store tb\n\n\n\nwp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)\nwp_nga\n\n# A tibble: 95,008 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n    <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429068 GRID3             7.98    5.12 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2 222071 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n 3 160612 WaterAid          6.49    7.93 12/04/… Yes     Boreho… Well    Hand P…\n 4 160669 WaterAid          6.73    7.65 12/04/… Yes     Boreho… Well    <NA>   \n 5 160642 WaterAid          6.78    7.66 12/04/… Yes     Boreho… Well    Hand P…\n 6 160628 WaterAid          6.96    7.78 12/04/… Yes     Boreho… Well    Hand P…\n 7 160632 WaterAid          7.02    7.84 12/04/… Yes     Boreho… Well    Hand P…\n 8 642747 Living Water …    7.33    8.98 10/03/… Yes     Boreho… Well    Mechan…\n 9 642456 Living Water …    7.17    9.11 10/03/… Yes     Boreho… Well    Hand P…\n10 641347 Living Water …    7.20    9.22 03/28/… Yes     Boreho… Well    Hand P…\n# … with 94,998 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n\n\n\n\n\n\n\n\nNote\n\n\n\nExtract from tibbler dataframe into a sf dataframe. Converting from tibbler to sf dataframe require the projection information. (\n\n\n\nwp_sf <- st_sf (wp_nga, crs=4326)\nwp_sf\n\nSimple feature collection with 95008 features and 70 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 2.707441 ymin: 4.301812 xmax: 14.21828 ymax: 13.86568\nGeodetic CRS:  WGS 84\n# A tibble: 95,008 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n *  <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429068 GRID3             7.98    5.12 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2 222071 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n 3 160612 WaterAid          6.49    7.93 12/04/… Yes     Boreho… Well    Hand P…\n 4 160669 WaterAid          6.73    7.65 12/04/… Yes     Boreho… Well    <NA>   \n 5 160642 WaterAid          6.78    7.66 12/04/… Yes     Boreho… Well    Hand P…\n 6 160628 WaterAid          6.96    7.78 12/04/… Yes     Boreho… Well    Hand P…\n 7 160632 WaterAid          7.02    7.84 12/04/… Yes     Boreho… Well    Hand P…\n 8 642747 Living Water …    7.33    8.98 10/03/… Yes     Boreho… Well    Mechan…\n 9 642456 Living Water …    7.17    9.11 10/03/… Yes     Boreho… Well    Hand P…\n10 641347 Living Water …    7.20    9.22 03/28/… Yes     Boreho… Well    Hand P…\n# … with 94,998 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n\n\n\n\n\n\n\n\nNote\n\n\n\nTransform the projection to wgs84\n\n\n\nwp_sf <- wp_sf %>%\n  st_transform(crs = 26392)\n\nwp_sf\n\nSimple feature collection with 95008 features and 70 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 28907.91 ymin: 33736.93 xmax: 1293293 ymax: 1092883\nProjected CRS: Minna / Nigeria Mid Belt\n# A tibble: 95,008 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n *  <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429068 GRID3             7.98    5.12 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2 222071 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n 3 160612 WaterAid          6.49    7.93 12/04/… Yes     Boreho… Well    Hand P…\n 4 160669 WaterAid          6.73    7.65 12/04/… Yes     Boreho… Well    <NA>   \n 5 160642 WaterAid          6.78    7.66 12/04/… Yes     Boreho… Well    Hand P…\n 6 160628 WaterAid          6.96    7.78 12/04/… Yes     Boreho… Well    Hand P…\n 7 160632 WaterAid          7.02    7.84 12/04/… Yes     Boreho… Well    Hand P…\n 8 642747 Living Water …    7.33    8.98 10/03/… Yes     Boreho… Well    Mechan…\n 9 642456 Living Water …    7.17    9.11 10/03/… Yes     Boreho… Well    Hand P…\n10 641347 Living Water …    7.20    9.22 03/28/… Yes     Boreho… Well    Hand P…\n# … with 94,998 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex2/Hands-on-Ex2.html",
    "href": "lessons/Hands-on/Hands-on-Ex2/Hands-on-Ex2.html",
    "title": "Hands-on-2",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse)\n\n\nmpsz = st_read(dsn = \"data/geospatial\", \n                  layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\Hands-on\\Hands-on-Ex2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\ncyclingpath = st_read(dsn = \"data/geospatial\", \n                         layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\Hands-on\\Hands-on-Ex2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2248 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\n\npreschool = st_read(\"data/geospatial/preschools-location.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\Hands-on\\Hands-on-Ex2\\data\\geospatial\\preschools-location.kml' \n  using driver `KML'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n\n\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n\n\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n\n\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n\n\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303...\n\n\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO <int> 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  <chr> \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  <chr> \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     <chr> \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N <chr> \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C <chr> \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   <chr> \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    <chr> \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D <date> 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     <dbl> 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     <dbl> 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng <dbl> 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area <dbl> 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\n\nhead(mpsz, n=5)  \n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n\n\n\nplot(mpsz)\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\nplot(st_geometry(mpsz))\n\n\n\n\n\nplot(mpsz[\"PLN_AREA_N\"])\n\n\n\n\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nmpsz3414 <- st_set_crs(mpsz, 3414)\n\nWarning: st_crs<- : replacing crs does not reproject data; use st_transform for\nthat\n\n\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\npreschool3414 <- st_transform(preschool, \n                              crs = 3414)\n\n\nlistings <- read_csv(\"data/aspatial/listings.csv\")\n\nRows: 4161 Columns: 75\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (26): listing_url, source, name, description, neighborhood_overview, pi...\ndbl  (37): id, scrape_id, host_id, host_listings_count, host_total_listings_...\nlgl   (7): host_is_superhost, host_has_profile_pic, host_identity_verified, ...\ndate  (5): last_scraped, host_since, calendar_last_scraped, first_review, la...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nlist(listings) \n\n[[1]]\n# A tibble: 4,161 × 75\n       id listing_url    scrap…¹ last_scr…² source name  descr…³ neigh…⁴ pictu…⁵\n    <dbl> <chr>            <dbl> <date>     <chr>  <chr> <chr>   <chr>   <chr>  \n 1  50646 https://www.a… 2.02e13 2022-09-23 previ… Plea… Fully … The se… https:…\n 2  71609 https://www.a… 2.02e13 2022-09-22 city … Ensu… For 3 … <NA>    https:…\n 3  71896 https://www.a… 2.02e13 2022-09-22 city … B&B … <b>The… <NA>    https:…\n 4  71903 https://www.a… 2.02e13 2022-09-22 city … Room… Like y… Quiet … https:…\n 5 275344 https://www.a… 2.02e13 2022-09-22 city … 15 m… Lovely… Bus st… https:…\n 6 289234 https://www.a… 2.02e13 2022-09-22 city … Book… This w… A quie… https:…\n 7 294281 https://www.a… 2.02e13 2022-09-22 city … 5 mi… I have… <NA>    https:…\n 8 324945 https://www.a… 2.02e13 2022-09-22 city … Cozy… <b>The… <NA>    https:…\n 9 330089 https://www.a… 2.02e13 2022-09-22 city … Cozy… A unit… <NA>    https:…\n10 330095 https://www.a… 2.02e13 2022-09-22 city … 10 m… Cosy, … Near I… https:…\n# … with 4,151 more rows, 66 more variables: host_id <dbl>, host_url <chr>,\n#   host_name <chr>, host_since <date>, host_location <chr>, host_about <chr>,\n#   host_response_time <chr>, host_response_rate <chr>,\n#   host_acceptance_rate <chr>, host_is_superhost <lgl>,\n#   host_thumbnail_url <chr>, host_picture_url <chr>, host_neighbourhood <chr>,\n#   host_listings_count <dbl>, host_total_listings_count <dbl>,\n#   host_verifications <chr>, host_has_profile_pic <lgl>, …\n\n\n\nlistings_sf <- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %>%\n  st_transform(crs = 3414)\n\n\nglimpse(listings_sf)\n\nRows: 4,161\nColumns: 74\n$ id                                           <dbl> 50646, 71609, 71896, 7190…\n$ listing_url                                  <chr> \"https://www.airbnb.com/r…\n$ scrape_id                                    <dbl> 2.022092e+13, 2.022092e+1…\n$ last_scraped                                 <date> 2022-09-23, 2022-09-22, …\n$ source                                       <chr> \"previous scrape\", \"city …\n$ name                                         <chr> \"Pleasant Room along Buki…\n$ description                                  <chr> \"Fully furnished bedroom …\n$ neighborhood_overview                        <chr> \"The serenity & quiet sur…\n$ picture_url                                  <chr> \"https://a0.muscache.com/…\n$ host_id                                      <dbl> 227796, 367042, 367042, 3…\n$ host_url                                     <chr> \"https://www.airbnb.com/u…\n$ host_name                                    <chr> \"Sujatha\", \"Belinda\", \"Be…\n$ host_since                                   <date> 2010-09-08, 2011-01-29, …\n$ host_location                                <chr> \"Singapore\", \"Singapore\",…\n$ host_about                                   <chr> \"I am a working professio…\n$ host_response_time                           <chr> \"a few days or more\", \"wi…\n$ host_response_rate                           <chr> \"0%\", \"100%\", \"100%\", \"10…\n$ host_acceptance_rate                         <chr> \"N/A\", \"100%\", \"100%\", \"1…\n$ host_is_superhost                            <lgl> FALSE, FALSE, FALSE, FALS…\n$ host_thumbnail_url                           <chr> \"https://a0.muscache.com/…\n$ host_picture_url                             <chr> \"https://a0.muscache.com/…\n$ host_neighbourhood                           <chr> \"Bukit Timah\", \"Tampines\"…\n$ host_listings_count                          <dbl> 1, 6, 6, 6, 44, 6, 7, 44,…\n$ host_total_listings_count                    <dbl> 4, 15, 15, 15, 57, 15, 8,…\n$ host_verifications                           <chr> \"['email', 'phone', 'work…\n$ host_has_profile_pic                         <lgl> TRUE, TRUE, TRUE, TRUE, T…\n$ host_identity_verified                       <lgl> TRUE, TRUE, TRUE, TRUE, T…\n$ neighbourhood                                <chr> \"Singapore, Singapore\", N…\n$ neighbourhood_cleansed                       <chr> \"Bukit Timah\", \"Tampines\"…\n$ neighbourhood_group_cleansed                 <chr> \"Central Region\", \"East R…\n$ property_type                                <chr> \"Private room in rental u…\n$ room_type                                    <chr> \"Private room\", \"Private …\n$ accommodates                                 <dbl> 2, 6, 1, 2, 1, 4, 2, 1, 1…\n$ bathrooms                                    <lgl> NA, NA, NA, NA, NA, NA, N…\n$ bathrooms_text                               <chr> \"1 bath\", \"1 private bath…\n$ bedrooms                                     <dbl> 1, 2, 1, 1, 1, 3, 1, 1, N…\n$ beds                                         <dbl> 1, 3, 1, 2, 1, 5, 1, 1, 1…\n$ amenities                                    <chr> \"[\\\"Gym\\\", \\\"Washer\\\", \\\"…\n$ price                                        <chr> \"$80.00\", \"$145.00\", \"$85…\n$ minimum_nights                               <dbl> 92, 92, 92, 92, 60, 92, 9…\n$ maximum_nights                               <dbl> 730, 1125, 1125, 1125, 99…\n$ minimum_minimum_nights                       <dbl> 92, 92, 92, 92, 60, 92, 9…\n$ maximum_minimum_nights                       <dbl> 92, 92, 92, 92, 60, 92, 9…\n$ minimum_maximum_nights                       <dbl> 730, 1125, 1125, 1125, 99…\n$ maximum_maximum_nights                       <dbl> 730, 1125, 1125, 1125, 99…\n$ minimum_nights_avg_ntm                       <dbl> 92, 92, 92, 92, 60, 92, 9…\n$ maximum_nights_avg_ntm                       <dbl> 730, 1125, 1125, 1125, 99…\n$ calendar_updated                             <lgl> NA, NA, NA, NA, NA, NA, N…\n$ has_availability                             <lgl> TRUE, TRUE, TRUE, TRUE, T…\n$ availability_30                              <dbl> 30, 5, 0, 30, 0, 0, 30, 5…\n$ availability_60                              <dbl> 60, 35, 1, 60, 0, 0, 60, …\n$ availability_90                              <dbl> 90, 65, 1, 90, 21, 10, 90…\n$ availability_365                             <dbl> 365, 340, 265, 365, 296, …\n$ calendar_last_scraped                        <date> 2022-09-23, 2022-09-22, …\n$ number_of_reviews                            <dbl> 18, 20, 24, 47, 14, 12, 1…\n$ number_of_reviews_ltm                        <dbl> 0, 0, 0, 0, 1, 0, 0, 3, 2…\n$ number_of_reviews_l30d                       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ first_review                                 <date> 2014-04-18, 2011-12-19, …\n$ last_review                                  <date> 2014-12-26, 2020-01-17, …\n$ review_scores_rating                         <dbl> 4.56, 4.44, 4.16, 4.41, 4…\n$ review_scores_accuracy                       <dbl> 4.72, 4.37, 4.22, 4.39, 4…\n$ review_scores_cleanliness                    <dbl> 4.78, 4.00, 4.09, 4.52, 4…\n$ review_scores_checkin                        <dbl> 4.78, 4.63, 4.43, 4.63, 4…\n$ review_scores_communication                  <dbl> 4.94, 4.78, 4.43, 4.64, 4…\n$ review_scores_location                       <dbl> 4.72, 4.26, 4.17, 4.50, 4…\n$ review_scores_value                          <dbl> 4.50, 4.32, 4.04, 4.36, 4…\n$ license                                      <chr> NA, NA, NA, NA, \"S0399\", …\n$ instant_bookable                             <lgl> FALSE, FALSE, TRUE, FALSE…\n$ calculated_host_listings_count               <dbl> 1, 6, 6, 6, 44, 6, 7, 44,…\n$ calculated_host_listings_count_entire_homes  <dbl> 0, 0, 0, 0, 2, 0, 1, 2, 2…\n$ calculated_host_listings_count_private_rooms <dbl> 1, 6, 6, 6, 42, 6, 6, 42,…\n$ calculated_host_listings_count_shared_rooms  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ reviews_per_month                            <dbl> 0.18, 0.15, 0.18, 0.34, 0…\n$ geometry                                     <POINT [m]> POINT (22646.02 351…\n\n\n\nbuffer_cycling <- st_buffer(cyclingpath, \n                               dist=5, nQuadSegs = 30)\n\n\nbuffer_cycling$AREA <- st_area(buffer_cycling)\n\n\nsum(buffer_cycling$AREA)\n\n1556978 [m^2]\n\n\n\nmpsz3414$`PreSch Count`<- lengths(st_intersects(mpsz3414, preschool3414))\n\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    3.00    5.96    9.00   58.00 \n\n\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           58\n\n\n\nmpsz3414$Area <- mpsz3414 %>%\n  st_area()\n\n\nmpsz3414 <- mpsz3414 %>%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)\n\n\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\n\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n\n\n\n\n\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Pre-school count\")\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex3/Hands-on-Ex3.html",
    "href": "lessons/Hands-on/Hands-on-Ex3/Hands-on-Ex3.html",
    "title": "Hands-on-Ex3",
    "section": "",
    "text": "Installing Dependencies\n\npacman::p_load(sf, tmap, tidyverse)\n\n\n\nImporting Geospatial Data into R\n\nmpsz <- st_read(dsn = \"data/geospatial/\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\Hands-on\\Hands-on-Ex3\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\nImporting Aspatial Data\n\npopdata <- read_csv(\"data/aspatial/respopagesexfa2011to2020.csv\")\n\n\n\nWrangling Data\n\npopdata2020 <- popdata %>%\n  filter(Time == 2020) %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup()%>%\n  pivot_wider(names_from=AG, \n              values_from=POP) %>%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %>%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%>%\nmutate(`AGED`=rowSums(.[16:21])) %>%\nmutate(`TOTAL`=rowSums(.[3:21])) %>%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\n\nJoining Datasets\n\n\n\n\n\n\nNote\n\n\n\nNeed to investigate on .funs as it is depreciated if necessary\n\n\n\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %>%\n  filter(`ECONOMY ACTIVE` > 0)\n\n\nmpsz_pop2020 <- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\nConverting to RDS\n\n\n\n\n\n\nNote\n\n\n\nNeed to ensure that folder has been created\n\n\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")\n\n\n\n\nMap Plotting\n\n\n\n\n\n\nNote\n\n\n\nCreated using qtm method\n\n\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nCreated using tmap\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nDrawing map using choropleth tm_polygons()\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nDraw using tm_shape\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nDraw using tm_shape but defining the border\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\n\n\nPlotting using tmap\n\n\n\n\n\n\nNote\n\n\n\nbuilt using built in classification method\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"sd\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"pretty\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"kmeans\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"hclust\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"bclust\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nCommittee Member: 1(1) 2(1) 3(1) 4(1) 5(1) 6(1) 7(1) 8(1) 9(1) 10(1)\nComputing Hierarchical Clustering\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"fisher\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nUsing different classes/\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 10,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 20,\n          style = \"pretty\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nSummary\n\n\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6540  0.7063  0.7712  0.7657 19.0000      92 \n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nUsing different colour\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nChanging Appearance\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nDifferent Map Style\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nCalling out different methods\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nResetting Style\n\n\n\ntmap_style(\"white\")\n\n\n\nDrawing Multiple Small Maps\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nCreating Multiple Stand Alone Map\n\n\n\nyoungmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nMapping only a small portion of the map only\n\n\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "lessons/In-class/in-class_ex3/In-class_Ex03.html",
    "href": "lessons/In-class/in-class_ex3/In-class_Ex03.html",
    "title": "In Class Excercise 3",
    "section": "",
    "text": "pacman::p_load(tmap,tidyverse,sf)"
  },
  {
    "objectID": "lessons/In-class/in-class_ex2/In-class_Ex02.html#geospatial-data-cleaning",
    "href": "lessons/In-class/in-class_ex2/In-class_Ex02.html#geospatial-data-cleaning",
    "title": "In Class Excercise 2",
    "section": "2 Geospatial Data Cleaning",
    "text": "2 Geospatial Data Cleaning\n\n2.1 Excluding the redundent fields\n\n\n\n\n\n\nNote\n\n\n\nRetain column 3,4,8,9 only.\n\n\n\nNGA <- NGA %>%\n  select(c(3:4, 8:9))\n\n\n\n2.2 Check for duplicate name\n\n\n\n\n\n\nNote\n\n\n\nThis step is to check for the quality of the data. This is to check for if any field if there is any duplicate\n\n\n\nNGA$ADM2_EN[duplicated(NGA$ADM2_EN)==TRUE]\n\n[1] \"Bassa\"    \"Ifelodun\" \"Irepodun\" \"Nasarawa\" \"Obi\"      \"Surulere\"\n\n\nIn this case there appears to be 6 duplicated LGA.\n\nNGA$ADM2_EN[94] <- \"Bassa, Kogi\"\nNGA$ADM2_EN[95] <- \"Bassa, Plateau\"\nNGA$ADM2_EN[304] <- \"Ifelodun, Kwara\"\nNGA$ADM2_EN[305] <- \"Ifellodun, Osun\"\nNGA$ADM2_EN[355] <- \"Irepodun, Kwara\"\nNGA$ADM2_EN[356] <- \"Irepodun, Osun\"\nNGA$ADM2_EN[519] <- \"Nasarawa, Kano\"\nNGA$ADM2_EN[520] <- \"Nasarawa, Nasarawa\"\nNGA$ADM2_EN[546] <- \"Obi, Benue\"\nNGA$ADM2_EN[547] <- \"Obi, Nasarawa\"\nNGA$ADM2_EN[693] <- \"Surulere, Lagos\"\nNGA$ADM2_EN[694] <- \"Surulere, Oyo\"\n\n\nNGA$ADM2_EN[duplicated(NGA$ADM2_EN)==TRUE]\n\ncharacter(0)"
  },
  {
    "objectID": "lessons/In-class/in-class_ex2/In-class_Ex02.html#data-wrangling-for-water-data-point",
    "href": "lessons/In-class/in-class_ex2/In-class_Ex02.html#data-wrangling-for-water-data-point",
    "title": "In Class Excercise 2",
    "section": "3 Data Wrangling for Water Data Point",
    "text": "3 Data Wrangling for Water Data Point\n\nfreq(data = wp_sf, input = \"#status_clean\")\n\n\n\n\n                     #status_clean frequency percentage cumulative_perc\n1                       Functional     45883      48.29           48.29\n2                   Non-Functional     29385      30.93           79.22\n3                             <NA>     10656      11.22           90.44\n4      Functional but needs repair      4579       4.82           95.26\n5 Non-Functional due to dry season      2403       2.53           97.79\n6        Functional but not in use      1686       1.77           99.56\n7         Abandoned/Decommissioned       234       0.25           99.81\n8                        Abandoned       175       0.18           99.99\n9 Non functional due to dry season         7       0.01          100.00\n\n\n\n\n\n\n\n\nNote\n\n\n\nmutate allow us to perform data preprocessing\n\n\n\nwp_sf_nga <- wp_sf %>%\n  rename(status_clean = \"#status_clean\") %>%\n  select(status_clean) %>%\n  mutate(status_clean = replace_na(status_clean, \"unknown\"))\n\n\n3.1 Extracting water Point Data\n\n3.1.1 Functional\n\nwp_functional <- wp_sf_nga %>%\n  filter(status_clean %in%\n        c(\"Functional\",\n          \"Functional but not in use\",\n          \"Functional but needs repair\"))\n\n\n\n3.1.2 Non Functional\n\nwp_nonfunctional <- wp_sf_nga %>%\n  filter(status_clean %in%\n        c(\"Abandoned/Decommissioned\",\n          \"Abandoned\",\n          \"Non-Functional due to dry season\",\n          \"Non-Functional\",\n          \"Non functional due to dry season\"))\n\n\n\n3.1.3 Unknown\n\nwp_unknown <- wp_sf_nga %>%\n  filter(status_clean %in%\n           c(\"unknown\"))\n\n\n\n3.1.4 Combining into a single dataframe\n\n\n\n\n\n\nNote\n\n\n\nThis give the total number of waterpoints that falls inside each NGA by comparing the dataset with theorginal NGA dataset and appending it into a new field in NGA_wp\n\n\n\nNGA_wp <- NGA %>%\n  mutate(`total_wp` = lengths( \n    st_intersects(NGA, wp_sf_nga))) %>%\n  mutate(`wp_functional` = lengths(\n    st_intersects(NGA, wp_functional))) %>%\n  mutate(`non_functional` = lengths(\n    st_intersects(NGA, wp_nonfunctional))) %>%\n  mutate(`wp_unknown` = lengths(\n    st_intersects(NGA, wp_unknown)))\n\n\n\n\n3.2 Saving the analytical data in RDS format\n\nwrite_rds(NGA_wp,\"data/rds/NGA_wp.rds\")\n\n\n\n3.3 Plotting\n\nggplot(data = NGA_wp, aes(x= total_wp)) +\n  geom_histogram(bins=20, color=\"black\", fill = \"light blue\") +\n  geom_vline(aes(xintercept=mean(total_wp, na.rm=T)), color =\"red\",linetype=\"dashed\", size=0.8) + \n  ggtitle(\"Distribution of total water points by LGA\")+\n  xlab(\"No. of water points\") + \n  ylab(\"No of \\nLGAs\") + \n  theme(axis.title.y=element_text(angle = 0))"
  },
  {
    "objectID": "lessons/In-class/in-class_ex3/In-class_Ex03.html#importing-the-data",
    "href": "lessons/In-class/in-class_ex3/In-class_Ex03.html#importing-the-data",
    "title": "In Class Excercise 3",
    "section": "2 Importing the data",
    "text": "2 Importing the data\n\nNGA_wp <- read_rds(\"data/rds/NGA_wp.rds\")"
  },
  {
    "objectID": "lessons/In-class/in-class_ex3/In-class_Ex03.html#basic-mapping",
    "href": "lessons/In-class/in-class_ex3/In-class_Ex03.html#basic-mapping",
    "title": "In Class Excercise 3",
    "section": "3 Basic Mapping",
    "text": "3 Basic Mapping\n\n3.1 Visualisization\n\n\n\n\n\n\nNote\n\n\n\ntm_shape is to access shape, it will not give a picture of the map. tm_fill and tm_border is used to draw the shape og the map\n\n\n\np1 <- tm_shape(NGA_wp) +\n  tm_fill(\"wp_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of functional water point by LGAs\",\n            legend.outside = TRUE)\n\np1\n\n\n\n\n\np2 <- tm_shape(NGA_wp) +\n  tm_fill(\"total_wp\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Greens\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of total water point by LGAs\",\n            legend.outside = TRUE)\n\np2\n\n\n\n\n\ntmap_arrange(p2, p1, nrow=1)"
  },
  {
    "objectID": "lessons/In-class/in-class_ex3/In-class_Ex03.html#plotting-map-of-rate",
    "href": "lessons/In-class/in-class_ex3/In-class_Ex03.html#plotting-map-of-rate",
    "title": "In Class Excercise 3",
    "section": "4 Plotting Map of Rate",
    "text": "4 Plotting Map of Rate\n\n\n\n\n\n\nNote\n\n\n\nCalculating Rate\n\n\n\nNGA_wp <- NGA_wp %>%\n  mutate(pct_functional = wp_functional/total_wp) %>%\n  mutate(pct_nonfunctional = non_functional/total_wp)\n\n\np3 <- tm_shape(NGA_wp) +\n  tm_fill(\"pct_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Purples\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Rate Map of water point by LGAs\",\n            legend.outside = TRUE)\n\np3\n\n\n\n\n\np4 <- tm_shape(NGA_wp) +\n  tm_fill(\"pct_nonfunctional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Reds\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Rate Map of Non Functional water point by LGAs\",\n            legend.outside = TRUE)\n\np4\n\n\n\n\n\ntmap_arrange(p4, p3, nrow=1)"
  },
  {
    "objectID": "lessons/In-class/in-class_ex3/In-class_Ex03.html#extreme-values-maps",
    "href": "lessons/In-class/in-class_ex3/In-class_Ex03.html#extreme-values-maps",
    "title": "In Class Excercise 3",
    "section": "5 Extreme Values Maps",
    "text": "5 Extreme Values Maps\n\n5.1 Percentile Map\n\n\n\n\n\n\nNote\n\n\n\nThis is a map with sizx specific catergories. Breakpoints can be dervied bym means of the base R quanbtile command, passing an explicit vector of cumulative probabilities. the start and end point must be included\n\n\n\n5.1.1 Data Preperation\nStep 1: Exclude records with NA\n\nNGA_wp <- NGA_wp %>%\n  drop_na()\n\nStep 2: Creating customised classification and extracting the values\n\n\n\n\n\n\nNote\n\n\n\nst_set_geometry must be set to null otherwise there will be an issue with the code chunk\n\n\n\npercent <- c(0,.01,.1,.5,.9,.99,1)\nvar <- NGA_wp[\"pct_functional\"] %>%\n  st_set_geometry(NULL)\nquantile(var[,1], percent)\n\n       0%        1%       10%       50%       90%       99%      100% \n0.0000000 0.0000000 0.2169811 0.4791667 0.8611111 1.0000000 1.0000000 \n\n\n\n\n5.1.2 Creating Functions\n\n\n\n\n\n\nNote\n\n\n\nFunction to get name\n\n\n\nget.var <- function(vname, df){\n  v <- df[vname] %>%\n    st_set_geometry(NULL)\n  v <- unname(v[,1])\n  return(v)\n}\n\n\n\n\n\n\n\nNote\n\n\n\nCreating Functions to draw maps out\n\n\n\npercentmap <- function(vnam, df, legtitle=NA, mtitle=\"Percentile Map\"){\n  percent <- c(0,.01,.1,.5,.9,.99,1)\n  var <- get.var(vnam,df)\n  bperc <- quantile(var, percent)\n  tm_shape(df) +\n    tm_polygons() +\n    tm_shape(df) +\n    tm_fill(vnam,\n            title= legtitle,\n            breaks = bperc,\n            palette=\"Spectral\",\n            labels = c(\"< 1%\", \"1% - 10%\", \"10% - 50%\", \"50% - 90%\", \"90% to 99%\", \"99% to 100%\")) +\n    tm_borders() +\n    tm_layout(main.title = mtitle,\n              title.position = c(\"right\", \"bottom\"),\n              legend.outside = TRUE)\n  \n}\n\n\n\n5.1.3 Plotting the Map\n\npercentmap(\"wp_functional\",NGA_wp)\n\n\n\n\n\npercentmap(\"non_functional\",NGA_wp)\n\n\n\n\n\n\n\n5.2 Box Plot\n\nggplot(data = NGA_wp,\n       aes(x = \"\",\n           y = non_functional)) +\n  geom_boxplot()\n\n\n\n\n\n\n5.3 Box Break Function\n\nboxbreaks <- function(v,mult=1.5) {\n  qv <- unname(quantile(v))\n  iqr <- qv[4] - qv[2]\n  upfence <- qv[4] + mult * iqr\n  lofence <- qv[2] - mult * iqr\n  # initialize break points vector\n  bb <- vector(mode=\"numeric\",length=7)\n  # logic for lower and upper fences\n  if (lofence < qv[1]) {  # no lower outliers\n    bb[1] <- lofence\n    bb[2] <- floor(qv[1])\n  } else {\n    bb[2] <- lofence\n    bb[1] <- qv[1]\n  }\n  if (upfence > qv[5]) { # no upper outliers\n    bb[7] <- upfence\n    bb[6] <- ceiling(qv[5])\n  } else {\n    bb[6] <- upfence\n    bb[7] <- qv[5]\n  }\n  bb[3:5] <- qv[2:4]\n  return(bb)\n}\n\n\n\n5.4 Create Get Var Function\n\nget.var <- function(vname,df) {\n  v <- df[vname] %>% st_set_geometry(NULL)\n  v <- unname(v[,1])\n  return(v)\n}\n\n\nvar <- get.var(\"non_functional\", NGA_wp) \nboxbreaks(var)\n\n[1] -56.5   0.0  14.0  34.0  61.0 131.5 278.0\n\n\n\n\n5.5 Box Map Function\n\nboxmap <- function(vnam, df, \n                   legtitle=NA,\n                   mtitle=\"Box Map\",\n                   mult=1.5){\n  var <- get.var(vnam,df)\n  bb <- boxbreaks(var)\n  tm_shape(df) +\n    tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,title=legtitle,\n             breaks=bb,\n             palette=\"Blues\",\n          labels = c(\"lower outlier\", \n                     \"< 25%\", \n                     \"25% - 50%\", \n                     \"50% - 75%\",\n                     \"> 75%\", \n                     \"upper outlier\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"left\",\n                               \"top\"))\n}\n\n\ntmap_mode(\"plot\")\nboxmap(\"non_functional\", NGA_wp)\n\n\n\n\n\n\n5.6 Recode Zero\n\nNGA_wp <- NGA_wp %>%\n  mutate(wp_functional = na_if(\n    total_wp, total_wp < 0))"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html",
    "title": "Hands on Excerise 4",
    "section": "",
    "text": "pacman::p_load(maptools, sf, raster, spatstat, tmap)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#importing-spatial-data",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#importing-spatial-data",
    "title": "Hands on Excerise 4",
    "section": "2.1 Importing Spatial Data",
    "text": "2.1 Importing Spatial Data\n\nchildcare_sf <- st_read(\"data/geospatial/child-care-services-geojson.geojson\") %>%\n  st_transform(crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\Hands-on\\Hands-on-Ex4\\data\\geospatial\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nsg_sf <- st_read(dsn = \"data/geospatial\", layer=\"CostalOutline\") %>%\n  st_transform(crs = 3414)\n\nReading layer `CostalOutline' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\Hands-on\\Hands-on-Ex4\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\") %>%\n  st_transform(crs = 3414)\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\Hands-on\\Hands-on-Ex4\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#converting-to-spatial-class",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#converting-to-spatial-class",
    "title": "Hands on Excerise 4",
    "section": "4.1 Converting to Spatial Class",
    "text": "4.1 Converting to Spatial Class\n\nchildcare <- as_Spatial(childcare_sf)\nmpsz <- as_Spatial(mpsz_sf)\nsg <- as_Spatial(sg_sf)\n\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSBLOCKHOUSENUMBER</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSBUILDINGNAME</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSPOSTALCODE</th> <td>018989</td> </tr><tr bgcolor=\"\"> <th>ADDRESSSTREETNAME</th> <td>1, MARINA BOULEVARD, #B1 - 01, ONE MARINA BOULEVARD, SINGAPORE 018989</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSTYPE</th> <td></td> </tr><tr bgcolor=\"\"> <th>DESCRIPTION</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>HYPERLINK</th> <td></td> </tr><tr bgcolor=\"\"> <th>LANDXADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>LANDYADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"\"> <th>NAME</th> <td>THE LITTLE SKOOL-HOUSE INTERNATIONAL PTE. LTD.</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PHOTOURL</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSFLOORNUMBER</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>08F73931F4A691F4</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200826094036</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSUNITNUMBER</th> <td></td> </tr></table></center> \nmax values  : kml_999,                  <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSBLOCKHOUSENUMBER</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSBUILDINGNAME</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSPOSTALCODE</th> <td>829646</td> </tr><tr bgcolor=\"\"> <th>ADDRESSSTREETNAME</th> <td>200, PONGGOL SEVENTEENTH AVENUE, SINGAPORE 829646</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSTYPE</th> <td></td> </tr><tr bgcolor=\"\"> <th>DESCRIPTION</th> <td>Child Care Services</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>HYPERLINK</th> <td></td> </tr><tr bgcolor=\"\"> <th>LANDXADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>LANDYADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"\"> <th>NAME</th> <td>RAFFLES KIDZ @ PUNGGOL PTE LTD</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PHOTOURL</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSFLOORNUMBER</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>379D017BF244B0FA</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200826094036</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSUNITNUMBER</th> <td></td> </tr></table></center> \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#converting-to-generic-sp-format",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#converting-to-generic-sp-format",
    "title": "Hands on Excerise 4",
    "section": "4.2 Converting to Generic SP Format",
    "text": "4.2 Converting to Generic SP Format\n\nchildcare_sp <- as(childcare, \"SpatialPoints\")\nsg_sp <- as(sg, \"SpatialPolygons\")\n\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#converting-into-spatstatss-ppp-format",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#converting-into-spatstatss-ppp-format",
    "title": "Hands on Excerise 4",
    "section": "4.3 Converting into spatstats’s ppp format",
    "text": "4.3 Converting into spatstats’s ppp format\n\nchildcare_ppp <- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\n\nplot(childcare_ppp)\n\n\n\n\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#viewing-the-duplicate",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#viewing-the-duplicate",
    "title": "Hands on Excerise 4",
    "section": "5.1 Viewing the Duplicate",
    "text": "5.1 Viewing the Duplicate\n\ntmap_mode('view')\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\n\n\n\ntmap_mode('plot')"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#remove-duplicate-with-jittering-method",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#remove-duplicate-with-jittering-method",
    "title": "Hands on Excerise 4",
    "section": "5.2 Remove Duplicate with jittering method",
    "text": "5.2 Remove Duplicate with jittering method\n\nchildcare_ppp_jit <- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#creating-owin-object",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#creating-owin-object",
    "title": "Hands on Excerise 4",
    "section": "5.3 Creating Owin Object",
    "text": "5.3 Creating Owin Object\n\nsg_owin <- as(sg_sp, \"owin\")\n\n\nplot(sg_owin)\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#combining-point-events-and-own-obbject",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#combining-point-events-and-own-obbject",
    "title": "Hands on Excerise 4",
    "section": "5.4 Combining Point events and own obbject",
    "text": "5.4 Combining Point events and own obbject\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 2.063463e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414\n\n\n\nplot(childcareSG_ppp)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#computing-kernal-density-automatically",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#computing-kernal-density-automatically",
    "title": "Hands on Excerise 4",
    "section": "6.1 Computing Kernal Density automatically",
    "text": "6.1 Computing Kernal Density automatically\n\nkde_childcareSG_bw <- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \n\n\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe density of the density is determined in meters, therefore it might be difficult to understand the value\n\n\n\nbw <- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n298.4095"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#rescalling-kde-value",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#rescalling-kde-value",
    "title": "Hands on Excerise 4",
    "section": "6.2 Rescalling KDE Value",
    "text": "6.2 Rescalling KDE Value\n\n\n\n\n\n\nNote\n\n\n\nRescaling help to make the number more understandable to the people.\n\n\n\nchildcareSG_ppp.km <- rescale(childcareSG_ppp, 1000, \"km\")\n\n\nkde_childcareSG.bw <- density(childcareSG_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG.bw)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#working-with-different-methods",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#working-with-different-methods",
    "title": "Hands on Excerise 4",
    "section": "6.3 Working with different methods",
    "text": "6.3 Working with different methods\n\n bw.CvL(childcareSG_ppp.km)\n\n   sigma \n4.543278 \n\n\n\nbw.scott(childcareSG_ppp.km)\n\n sigma.x  sigma.y \n2.224898 1.450966 \n\n\n\nbw.ppl(childcareSG_ppp.km)\n\n    sigma \n0.3897114 \n\n\n\nbw.diggle(childcareSG_ppp.km)\n\n    sigma \n0.2984095 \n\n\n\nkde_childcareSG.ppl <- density(childcareSG_ppp.km, \n                               sigma=bw.ppl, \n                               edge=TRUE,\n                               kernel=\"gaussian\")\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"bw.diggle\")\nplot(kde_childcareSG.ppl, main = \"bw.ppl\")"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#working-with-different-kernal-methods",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#working-with-different-kernal-methods",
    "title": "Hands on Excerise 4",
    "section": "6.4 Working with different kernal methods",
    "text": "6.4 Working with different kernal methods\n\npar(mfrow=c(2,2))\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"Gaussian\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"epanechnikov\"), \n     main=\"Epanechnikov\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"quartic\"), \n     main=\"Quartic\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"disc\"), \n     main=\"Disc\")"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#computation-using-adaptive-bandwidth",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#computation-using-adaptive-bandwidth",
    "title": "Hands on Excerise 4",
    "section": "7.1 Computation using Adaptive Bandwidth",
    "text": "7.1 Computation using Adaptive Bandwidth\n\nkde_childcareSG_adaptive <- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\nplot(kde_childcareSG_adaptive)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nComparing\n\n\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#converting-kde-to-grid-object",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#converting-kde-to-grid-object",
    "title": "Hands on Excerise 4",
    "section": "7.2 Converting KDE to grid Object",
    "text": "7.2 Converting KDE to grid Object\n\n\n\n\n\n\nNote\n\n\n\nImages is practically useless, therefore we need to convert it into a KDE object.\n\n\n\ngridded_kde_childcareSG_bw <- as.SpatialGridDataFrame.im(kde_childcareSG.bw)\nspplot(gridded_kde_childcareSG_bw)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#converting-to-raster-from-grid-object",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#converting-to-raster-from-grid-object",
    "title": "Hands on Excerise 4",
    "section": "7.3 Converting to Raster from Grid Object",
    "text": "7.3 Converting to Raster from Grid Object\n\nkde_childcareSG_bw_raster <- raster(gridded_kde_childcareSG_bw)\n\n\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -8.476185e-15, 28.51831  (min, max)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#assigning-projection-systems",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#assigning-projection-systems",
    "title": "Hands on Excerise 4",
    "section": "7.4 Assigning Projection Systems",
    "text": "7.4 Assigning Projection Systems\n\nprojection(kde_childcareSG_bw_raster) <- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +init=EPSG:3414 \nsource     : memory\nnames      : v \nvalues     : -8.476185e-15, 28.51831  (min, max)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#visualising-in-tmap",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#visualising-in-tmap",
    "title": "Hands on Excerise 4",
    "section": "7.5 Visualising in Tmap",
    "text": "7.5 Visualising in Tmap\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)##"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#comparing-spatial-point-pattern",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#comparing-spatial-point-pattern",
    "title": "Hands on Excerise 4",
    "section": "7.6 Comparing Spatial Point Pattern",
    "text": "7.6 Comparing Spatial Point Pattern\n\n7.6.1 Extracting the area\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Ponggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n7.6.2 Converting to Generic SP Format\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")\n\n\n\n7.6.3 Creating Owin Object\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")\n\n\n\n7.6.4 Combining Points and Stydu area\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\n\nchildcare_pg_ppp\n\nPlanar point pattern: 61 points\nwindow: polygonal boundary\nenclosing rectangle: [33952.59, 38889.96] x [40874.37, 44808.89] units\n\n\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")\n\n\n\n\n\n\n7.6.5 Computing KDE\n\npar(mfrow=c(2,2))\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tempines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\n\n\n\n\n\npar(mfrow=c(2,2))\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Chou Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#testing-with-clar-and-evans",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#testing-with-clar-and-evans",
    "title": "Hands on Excerise 4",
    "section": "8.1 Testing with Clar and Evans",
    "text": "8.1 Testing with Clar and Evans\n\nclarkevans.test(childcareSG_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 99 simulations of CSR with fixed n\n\ndata:  childcareSG_ppp\nR = 0.54756, p-value = 0.01\nalternative hypothesis: clustered (R < 1)\n\n\n\n\n\n\n\n\nNote\n\n\n\nPossible Conclusion that it might not be randomly distributed."
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#clark-and-evans-test-on-cck-planning-area",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#clark-and-evans-test-on-cck-planning-area",
    "title": "Hands on Excerise 4",
    "section": "8.2 Clark and Evans Test On CCK Planning Area",
    "text": "8.2 Clark and Evans Test On CCK Planning Area\n\nclarkevans.test(childcare_ck_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 999 simulations of CSR with fixed n\n\ndata:  childcare_ck_ppp\nR = 0.89727, p-value = 0.038\nalternative hypothesis: two-sided"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#clark-and-evans-test-on-tampinese-planning-area",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#clark-and-evans-test-on-tampinese-planning-area",
    "title": "Hands on Excerise 4",
    "section": "8.3 Clark and Evans Test On Tampinese Planning Area",
    "text": "8.3 Clark and Evans Test On Tampinese Planning Area\n\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 999 simulations of CSR with fixed n\n\ndata:  childcare_tm_ppp\nR = 0.77734, p-value = 0.002\nalternative hypothesis: two-sided"
  },
  {
    "objectID": "lessons/In-class/in-class_ex4/In-class_Ex04.html",
    "href": "lessons/In-class/in-class_ex4/In-class_Ex04.html",
    "title": "In Class Exercise 4",
    "section": "",
    "text": "1 Loading the package\n\npacman::p_load(maptools, sf, raster, spatstat, tmap)\n\nThings to learn outside from this code chunk.\n\n\n2 Load Dataset\n\nchildcare_sf <- st_read(\"data/geospatial/child-care-services-geojson.geojson\") %>%\n  st_transform(crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\In-class\\in-class_ex4\\data\\geospatial\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nThis is already a projected coordinate system. This is converted to meters.\n\n\n\n\n\n\nNote\n\n\n\nFor all spatial analysis, all data must be projected coordinate system.\n\n\n\nsg_sf <- st_read(dsn = \"data/geospatial\", layer=\"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\In-class\\in-class_ex4\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\In-class\\in-class_ex4\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\n\n\n\n\nNote\n\n\n\ntmap_mode(“plot”) will give a static map\ntmap_mode(“view”) will give a interactive map\ntmap is an extension of leaflet\nalpha is to introduce a certain level of opacity\ntm_shape is needed to create a new layer. It needs to be at the start of everyplot\n\n\n\ntmap_mode('view')\ntm_shape(childcare_sf) +\n  tm_dots(alph = 0.5, size=0.01) \n\n\n\n\n\n\n\n2.0.1 Converting to Spatial Dataframe\n\n\n\n\n\n\nNote\n\n\n\nSpatial Polygon has a data table\n\n\n\nchildcare <- as_Spatial(childcare_sf)\nmpsz <- as_Spatial(mpsz_sf)\nsg <- as_Spatial(sg_sf)\n\n\n\n2.0.2 Converting to Spatial Object\n\n\n\n\n\n\nNote\n\n\n\nThis only retains the geometric\n\n\n\nchildcare_sp <- as(childcare, \"SpatialPoints\")\nsg_sp <- as(sg, \"SpatialPolygons\")\n\n\n\n2.0.3 Converting to PPP format\n\n\n\n\n\n\nNote\n\n\n\nThis drops everything else into a list of coordinates that can only be read by the ST package\n\n\n\nchildcare_ppp <- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\n\n\n\n3 Additional Map\n\ntmap_mode('view')\ntm_shape(childcare_sf) +\n  tm_dots(alph = 0.5, size=0.01) +\n  tm_view(set.zoom.limits = c(11,14), set.bounds = TRUE)"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "Important\n\n\n\nThis context is taken from the IS415 Take Home Exercise 1\nAll rights belong to Dr Kam Tin Seong.\n\n\nWater is an important resource to mankind. Clean and accessible water is critical to human health. It provides a healthy environment, a sustainable economy, reduces poverty and ensures peace and security. Yet over 40% of the global population does not have access to sufficient clean water. By 2025, 1.8 billion people will be living in countries or regions with absolute water scarcity, according to UN-Water. The lack of water poses a major threat to several sectors, including food security. Agriculture uses about 70% of the world’s accessible freshwater.\nDeveloping countries are most affected by water shortages and poor water quality. Up to 80% of illnesses in the developing world are linked to inadequate water and sanitation. Despite technological advancement, providing clean water to the rural community is still a major development issues in many countries globally, especially countries in the Africa continent.\nTo address the issue of providing clean and sustainable water supply to the rural community, a global Water Point Data Exchange (WPdx) project has been initiated. The main aim of this initiative is to collect water point related data from rural areas at the water point or small water scheme level and share the data via WPdx Data Repository, a cloud-based data library. What is so special of this project is that data are collected based on WPDx Data Standard.\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThis Objectives are taken from the IS415 Take Home Exercise 1\nAll rights belong to Dr Kam Tin Seong.\n\n\n\n\n\nDerive kernel density maps of functional and non-functional water points. Using appropriate tmap functions,\nDisplay the kernel density maps on openstreetmap of Osub State, Nigeria.\nDescribe the spatial patterns revealed by the kernel density maps. Highlight the advantage of kernel density map over point map.\n\n\n\n\nWith reference to the spatial point patterns observed in ESDA:\n\nFormulate the null hypothesis and alternative hypothesis and select the confidence level.\nPerform the test by using appropriate Second order spatial point patterns analysis technique.\nWith reference to the analysis results, draw statistical conclusions.\n\n\n\n\nIn this section, you are required to confirm statistically if the spatial distribution of functional and non-functional water points are independent from each other.\n\nFormulate the null hypothesis and alternative hypothesis and select the confidence level.\nPerform the test by using appropriate Second order spatial point patterns analysis technique.\nWith reference to the analysis results, draw statistical conclusions."
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#choa-chu-kang-area",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#choa-chu-kang-area",
    "title": "Hands on Excerise 4",
    "section": "9.1 Choa Chu Kang Area",
    "text": "9.1 Choa Chu Kang Area\n\n9.1.1 Computing G Function estimation\n\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n\n\n\n\n\n\n9.1.2 Performing Complete Spatial Randomness Test\n\nG_CK.csr <- envelope(childcare_ck_ppp, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(G_CK.csr)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#tampinese-planning-area",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#tampinese-planning-area",
    "title": "Hands on Excerise 4",
    "section": "9.2 Tampinese Planning Area",
    "text": "9.2 Tampinese Planning Area\n\n9.2.1 Computing G Function\n\nG_tm = Gest(childcare_tm_ppp, correction = \"best\")\nplot(G_tm)\n\n\n\n\n\n\n9.2.2 Performing Complete Spatial Randomness Test\n\nG_tm.csr <- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(G_tm.csr)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#choa-chu-kang",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#choa-chu-kang",
    "title": "Hands on Excerise 4",
    "section": "10.1 Choa Chu Kang",
    "text": "10.1 Choa Chu Kang\n\n10.1.1 Computing F Function Estimate\n\nF_CK = Fest(childcare_ck_ppp)\nplot(F_CK)\n\n\n\n\n\n\n10.1.2 Complete Spatial Randomness Test\n\nF_CK.csr <- envelope(childcare_ck_ppp, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(F_CK.csr)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#tampines",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#tampines",
    "title": "Hands on Excerise 4",
    "section": "10.2 Tampines",
    "text": "10.2 Tampines\n\n10.2.1 Computing F Function Estimate\n\nF_tm = Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n\n\n\n\n\n\n10.2.2 Complete Spatial Randomness Test\n\nF_tm.csr <- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(F_tm.csr)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#choa-chu-kang-1",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#choa-chu-kang-1",
    "title": "Hands on Excerise 4",
    "section": "11.1 Choa Chu Kang",
    "text": "11.1 Choa Chu Kang\n\n11.1.1 Computing K Function Estimate\n\nK_ck = Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n11.1.2 Complete Spatial Randomness Test\n\nK_ck.csr <- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#tampines-1",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#tampines-1",
    "title": "Hands on Excerise 4",
    "section": "11.2 Tampines",
    "text": "11.2 Tampines\n\n11.2.1 Computing K Function Estimate\n\nK_tm = Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n11.2.2 Complete Spatial Randomness Test\n\nK_tm.csr <- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(K_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"K(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#choa-chu-kang-2",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#choa-chu-kang-2",
    "title": "Hands on Excerise 4",
    "section": "12.1 Choa Chu Kang",
    "text": "12.1 Choa Chu Kang\n\n12.1.1 Computing L Function Estimate\n\n\n\n\n\n\nNote\n\n\n\nThis is a plot without simulation, therefore this is an estimate.\nCorrection extends the boundary so that we can see more the point at the edge.\n\n\n\nL_ck = Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n12.1.2 Complete Spatial Randomness Test\n\n\n\n\n\n\nNote\n\n\n\nThe envelope method perform the monte carlo simulation of the point. the number of simulation is based on the confidence level.\n\n\n\nL_ck.csr <- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nBased on the graph below. As long as the line is below boundary, it is statistically insignificant. In the Prof example, the distance between 480 and 580, is statistically significant to proof that there is clustering\n\n\n\nplot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#tampines-2",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.html#tampines-2",
    "title": "Hands on Excerise 4",
    "section": "12.2 Tampines",
    "text": "12.2 Tampines\n\n12.2.1 Computing L Function Estimate\n\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n12.2.2 Complete Spatial Randomness Test\n\nL_tm.csr <- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#importing-geospatial",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#importing-geospatial",
    "title": "Take Home Exercise 1",
    "section": "Importing Geospatial",
    "text": "Importing Geospatial\n\n\n\n\n\n\nNote\n\n\n\nNeed to double check the CRS as it is depending on the system used by the country.\n\n\n\ngeoNGA <- st_read(\"data/geospatial/\",\n                  layer = \"geoBoundaries-NGA-ADM2\") %>%\n  st_transform(crs = 26392)\n\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\Take-home\\Take-home_ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\nNGA <- st_read(\"data/geospatial/\",\n               layer = \"nga_admbnda_adm2_osgof_20190417\") %>%\n  st_transform(crs = 26392)\n\nReading layer `nga_admbnda_adm2_osgof_20190417' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\Take-home\\Take-home_ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#importing-aspatial-datqa",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#importing-aspatial-datqa",
    "title": "Take Home Exercise 1",
    "section": "Importing Aspatial Datqa",
    "text": "Importing Aspatial Datqa\n\nwp_nga <- read_csv(\"data/aspatial/WPdx.csv\") %>%\n  filter(`#clean_country_name` == \"Nigeria\")\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n\n\nRows: 406566 Columns: 70\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (43): #source, #report_date, #status_id, #water_source_clean, #water_sou...\ndbl (23): row_id, #lat_deg, #lon_deg, #install_year, #fecal_coliform_value, ...\nlgl  (4): #rehab_year, #rehabilitator, is_urban, latest_record\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nwp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)\nwp_nga\n\n# A tibble: 95,008 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n    <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429068 GRID3             7.98    5.12 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2 222071 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n 3 160612 WaterAid          6.49    7.93 12/04/… Yes     Boreho… Well    Hand P…\n 4 160669 WaterAid          6.73    7.65 12/04/… Yes     Boreho… Well    <NA>   \n 5 160642 WaterAid          6.78    7.66 12/04/… Yes     Boreho… Well    Hand P…\n 6 160628 WaterAid          6.96    7.78 12/04/… Yes     Boreho… Well    Hand P…\n 7 160632 WaterAid          7.02    7.84 12/04/… Yes     Boreho… Well    Hand P…\n 8 642747 Living Water …    7.33    8.98 10/03/… Yes     Boreho… Well    Mechan…\n 9 642456 Living Water …    7.17    9.11 10/03/… Yes     Boreho… Well    Hand P…\n10 641347 Living Water …    7.20    9.22 03/28/… Yes     Boreho… Well    Hand P…\n# … with 94,998 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n\n\n\nwp_sf <- st_sf(wp_nga, crs=4326)\nwp_sf\n\nSimple feature collection with 95008 features and 70 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 2.707441 ymin: 4.301812 xmax: 14.21828 ymax: 13.86568\nGeodetic CRS:  WGS 84\n# A tibble: 95,008 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n *  <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429068 GRID3             7.98    5.12 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2 222071 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n 3 160612 WaterAid          6.49    7.93 12/04/… Yes     Boreho… Well    Hand P…\n 4 160669 WaterAid          6.73    7.65 12/04/… Yes     Boreho… Well    <NA>   \n 5 160642 WaterAid          6.78    7.66 12/04/… Yes     Boreho… Well    Hand P…\n 6 160628 WaterAid          6.96    7.78 12/04/… Yes     Boreho… Well    Hand P…\n 7 160632 WaterAid          7.02    7.84 12/04/… Yes     Boreho… Well    Hand P…\n 8 642747 Living Water …    7.33    8.98 10/03/… Yes     Boreho… Well    Mechan…\n 9 642456 Living Water …    7.17    9.11 10/03/… Yes     Boreho… Well    Hand P…\n10 641347 Living Water …    7.20    9.22 03/28/… Yes     Boreho… Well    Hand P…\n# … with 94,998 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n\n\n\nwp_sf <- wp_sf %>%\n  st_transform(crs = 26392)"
  },
  {
    "objectID": "lessons/In-class/in-class_ex5/In-class_Ex05.html",
    "href": "lessons/In-class/in-class_ex5/In-class_Ex05.html",
    "title": "In Class Exercise 5",
    "section": "",
    "text": "1 Getting Started\n\npacman::p_load(tidyverse, tmap, sf, sfdep)\n\n\n\n2 Importing Data\n\n\n\n\n\n\nNote\n\n\n\nTaiwan has 2 projection system\n\n\n\nstudyArea <- st_read(dsn = \"data\",\n                     layer=\"study_area\") %>%\n  st_transform (crs =3829)\n\nReading layer `study_area' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\In-class\\in-class_ex5\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 7 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 121.4836 ymin: 25.00776 xmax: 121.592 ymax: 25.09288\nGeodetic CRS:  TWD97\n\n\n\nstores <- st_read(dsn = \"data\",\n                     layer=\"stores\") %>%\n  st_transform (crs =3829)\n\nReading layer `stores' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\In-class\\in-class_ex5\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1409 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 121.4902 ymin: 25.01257 xmax: 121.5874 ymax: 25.08557\nGeodetic CRS:  TWD97\n\n\n\ntmap_mode(\"view\")\ntm_shape(studyArea)+\n  tm_polygons() +\n  tm_shape(stores) +\n  tm_dots(col=\"Name\",\n          size = 0.01,\n          border.col=\"black\",\n          border.lwd=0.5)+\n  tm_view(set.zoom.limits = c(12,16))\n\n\n\n\n\n\n\n\n3 Local Colocation Quotients (LCLQ)\n\n\n\n\n\n\nNote\n\n\n\n6 nearest neighbour is used. Include Self is needed as it help to boost the number to an odd number.\nThis is an adaptive method. Weights of the stores will be stored when st_knernel_weights is used\n\n\n\nnb <- include_self(\n  st_knn(st_geometry(stores),6)\n)\n\n\nwt <- st_kernel_weights(nb,\n                        stores,\n                        \"gaussian\",\n                        adaptive = TRUE)\n\n\nFamilyMart <- stores %>%\n  filter(Name == \"Family Mart\")\nA <- FamilyMart$Name\n\n\nSevenEleven <- stores %>%\n  filter(Name == \"7-Eleven\")\nB <- SevenEleven$Name\n\n\n\n\n\n\n\nNote\n\n\n\nA is the target\nB is the neightbour\nnb is a list of nearest neighbour\nwt is the weight\n49 is the simulation runs\nThe simulation will run 50 Times, and will generate a different p-value\nNA is common in local_colocation()\n\n\n\nLCLQ <- local_colocation (A, B, nb, wt, 49)\n\n\n\n\n\n\n\nNote\n\n\n\nThere is no unique idenitfier therefore, the only code is cbind. cbind cannot work if the results is sorted.\n\n\n\nLCLQ_stores <- cbind(stores, LCLQ)\n\n\ntmap_mode(\"view\")+\n  tm_shape(studyArea)+\n  tm_polygons() +\n  tm_shape(LCLQ_stores) +\n  tm_dots(col=\"X7.Eleven\",\n          size = 0.01,\n          border.col=\"black\",\n          border.lwd=0.5)+\n  tm_shape(stores)+\n  tm_dots(col=\"Name\",\n          size = 0.01,\n          border.col=\"black\",\n          border.lwd=0.5)\n\n\n\n\n\n  tm_view(set.zoom.limits = c(12,16))\n\n$tm_layout\n$tm_layout$set.zoom.limits\n[1] 12 16\n\n$tm_layout$style\n[1] NA\n\n\nattr(,\"class\")\n[1] \"tm\""
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html",
    "title": "Hands on Excerise 4",
    "section": "",
    "text": "pacman::p_load(maptools, sf, raster, spatstat, tmap)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#importing-spatial-data",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#importing-spatial-data",
    "title": "Hands on Excerise 4",
    "section": "2.1 Importing Spatial Data",
    "text": "2.1 Importing Spatial Data\n\nchildcare_sf <- st_read(\"data/geospatial/child-care-services-geojson.geojson\") %>%\n  st_transform(crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\Hands-on\\Hands-on-Ex4\\data\\geospatial\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nsg_sf <- st_read(dsn = \"data/geospatial\", layer=\"CostalOutline\") %>%\n  st_transform(crs = 3414)\n\nReading layer `CostalOutline' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\Hands-on\\Hands-on-Ex4\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\") %>%\n  st_transform(crs = 3414)\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\Hands-on\\Hands-on-Ex4\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#converting-to-spatial-class",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#converting-to-spatial-class",
    "title": "Hands on Excerise 4",
    "section": "4.1 Converting to Spatial Class",
    "text": "4.1 Converting to Spatial Class\n\nchildcare <- as_Spatial(childcare_sf)\nmpsz <- as_Spatial(mpsz_sf)\nsg <- as_Spatial(sg_sf)\n\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSBLOCKHOUSENUMBER</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSBUILDINGNAME</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSPOSTALCODE</th> <td>018989</td> </tr><tr bgcolor=\"\"> <th>ADDRESSSTREETNAME</th> <td>1, MARINA BOULEVARD, #B1 - 01, ONE MARINA BOULEVARD, SINGAPORE 018989</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSTYPE</th> <td></td> </tr><tr bgcolor=\"\"> <th>DESCRIPTION</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>HYPERLINK</th> <td></td> </tr><tr bgcolor=\"\"> <th>LANDXADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>LANDYADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"\"> <th>NAME</th> <td>THE LITTLE SKOOL-HOUSE INTERNATIONAL PTE. LTD.</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PHOTOURL</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSFLOORNUMBER</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>08F73931F4A691F4</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200826094036</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSUNITNUMBER</th> <td></td> </tr></table></center> \nmax values  : kml_999,                  <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSBLOCKHOUSENUMBER</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSBUILDINGNAME</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSPOSTALCODE</th> <td>829646</td> </tr><tr bgcolor=\"\"> <th>ADDRESSSTREETNAME</th> <td>200, PONGGOL SEVENTEENTH AVENUE, SINGAPORE 829646</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSTYPE</th> <td></td> </tr><tr bgcolor=\"\"> <th>DESCRIPTION</th> <td>Child Care Services</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>HYPERLINK</th> <td></td> </tr><tr bgcolor=\"\"> <th>LANDXADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>LANDYADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"\"> <th>NAME</th> <td>RAFFLES KIDZ @ PUNGGOL PTE LTD</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PHOTOURL</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSFLOORNUMBER</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>379D017BF244B0FA</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200826094036</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSUNITNUMBER</th> <td></td> </tr></table></center> \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#converting-to-generic-sp-format",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#converting-to-generic-sp-format",
    "title": "Hands on Excerise 4",
    "section": "4.2 Converting to Generic SP Format",
    "text": "4.2 Converting to Generic SP Format\n\nchildcare_sp <- as(childcare, \"SpatialPoints\")\nsg_sp <- as(sg, \"SpatialPolygons\")\n\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#converting-into-spatstatss-ppp-format",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#converting-into-spatstatss-ppp-format",
    "title": "Hands on Excerise 4",
    "section": "4.3 Converting into spatstats’s ppp format",
    "text": "4.3 Converting into spatstats’s ppp format\n\nchildcare_ppp <- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\n\nplot(childcare_ppp)\n\n\n\n\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#viewing-the-duplicate",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#viewing-the-duplicate",
    "title": "Hands on Excerise 4",
    "section": "5.1 Viewing the Duplicate",
    "text": "5.1 Viewing the Duplicate\n\ntmap_mode('view')\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\n\n\n\ntmap_mode('plot')"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#remove-duplicate-with-jittering-method",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#remove-duplicate-with-jittering-method",
    "title": "Hands on Excerise 4",
    "section": "5.2 Remove Duplicate with jittering method",
    "text": "5.2 Remove Duplicate with jittering method\n\nchildcare_ppp_jit <- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#creating-owin-object",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#creating-owin-object",
    "title": "Hands on Excerise 4",
    "section": "5.3 Creating Owin Object",
    "text": "5.3 Creating Owin Object\n\nsg_owin <- as(sg_sp, \"owin\")\n\n\nplot(sg_owin)\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#combining-point-events-and-own-obbject",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#combining-point-events-and-own-obbject",
    "title": "Hands on Excerise 4",
    "section": "5.4 Combining Point events and own obbject",
    "text": "5.4 Combining Point events and own obbject\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 2.063463e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414\n\n\n\nplot(childcareSG_ppp)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#computing-kernal-density-automatically",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#computing-kernal-density-automatically",
    "title": "Hands on Excerise 4",
    "section": "6.1 Computing Kernal Density automatically",
    "text": "6.1 Computing Kernal Density automatically\n\nkde_childcareSG_bw <- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \n\n\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe density of the density is determined in meters, therefore it might be difficult to understand the value\n\n\n\nbw <- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n298.4095"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#rescalling-kde-value",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#rescalling-kde-value",
    "title": "Hands on Excerise 4",
    "section": "6.2 Rescalling KDE Value",
    "text": "6.2 Rescalling KDE Value\n\n\n\n\n\n\nNote\n\n\n\nRescaling help to make the number more understandable to the people.\n\n\n\nchildcareSG_ppp.km <- rescale(childcareSG_ppp, 1000, \"km\")\n\n\nkde_childcareSG.bw <- density(childcareSG_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG.bw)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#working-with-different-methods",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#working-with-different-methods",
    "title": "Hands on Excerise 4",
    "section": "6.3 Working with different methods",
    "text": "6.3 Working with different methods\n\n bw.CvL(childcareSG_ppp.km)\n\n   sigma \n4.543278 \n\n\n\nbw.scott(childcareSG_ppp.km)\n\n sigma.x  sigma.y \n2.224898 1.450966 \n\n\n\nbw.ppl(childcareSG_ppp.km)\n\n    sigma \n0.3897114 \n\n\n\nbw.diggle(childcareSG_ppp.km)\n\n    sigma \n0.2984095 \n\n\n\nkde_childcareSG.ppl <- density(childcareSG_ppp.km, \n                               sigma=bw.ppl, \n                               edge=TRUE,\n                               kernel=\"gaussian\")\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"bw.diggle\")\nplot(kde_childcareSG.ppl, main = \"bw.ppl\")"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#working-with-different-kernal-methods",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#working-with-different-kernal-methods",
    "title": "Hands on Excerise 4",
    "section": "6.4 Working with different kernal methods",
    "text": "6.4 Working with different kernal methods\n\npar(mfrow=c(2,2))\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"Gaussian\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"epanechnikov\"), \n     main=\"Epanechnikov\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"quartic\"), \n     main=\"Quartic\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"disc\"), \n     main=\"Disc\")"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#computation-using-adaptive-bandwidth",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#computation-using-adaptive-bandwidth",
    "title": "Hands on Excerise 4",
    "section": "7.1 Computation using Adaptive Bandwidth",
    "text": "7.1 Computation using Adaptive Bandwidth\n\nkde_childcareSG_adaptive <- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\nplot(kde_childcareSG_adaptive)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nComparing\n\n\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#converting-kde-to-grid-object",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#converting-kde-to-grid-object",
    "title": "Hands on Excerise 4",
    "section": "7.2 Converting KDE to grid Object",
    "text": "7.2 Converting KDE to grid Object\n\n\n\n\n\n\nNote\n\n\n\nImages is practically useless, therefore we need to convert it into a KDE object.\n\n\n\ngridded_kde_childcareSG_bw <- as.SpatialGridDataFrame.im(kde_childcareSG.bw)\nspplot(gridded_kde_childcareSG_bw)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#converting-to-raster-from-grid-object",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#converting-to-raster-from-grid-object",
    "title": "Hands on Excerise 4",
    "section": "7.3 Converting to Raster from Grid Object",
    "text": "7.3 Converting to Raster from Grid Object\n\nkde_childcareSG_bw_raster <- raster(gridded_kde_childcareSG_bw)\n\n\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -8.476185e-15, 28.51831  (min, max)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#assigning-projection-systems",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#assigning-projection-systems",
    "title": "Hands on Excerise 4",
    "section": "7.4 Assigning Projection Systems",
    "text": "7.4 Assigning Projection Systems\n\nprojection(kde_childcareSG_bw_raster) <- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +init=EPSG:3414 \nsource     : memory\nnames      : v \nvalues     : -8.476185e-15, 28.51831  (min, max)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#visualising-in-tmap",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#visualising-in-tmap",
    "title": "Hands on Excerise 4",
    "section": "7.5 Visualising in Tmap",
    "text": "7.5 Visualising in Tmap\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)##"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#comparing-spatial-point-pattern",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#comparing-spatial-point-pattern",
    "title": "Hands on Excerise 4",
    "section": "7.6 Comparing Spatial Point Pattern",
    "text": "7.6 Comparing Spatial Point Pattern\n\n7.6.1 Extracting the area\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Ponggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n7.6.2 Converting to Generic SP Format\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")\n\n\n\n7.6.3 Creating Owin Object\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")\n\n\n\n7.6.4 Combining Points and Stydu area\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\n\nchildcare_pg_ppp\n\nPlanar point pattern: 61 points\nwindow: polygonal boundary\nenclosing rectangle: [33952.59, 38889.96] x [40874.37, 44808.89] units\n\n\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")\n\n\n\n\n\n\n7.6.5 Computing KDE\n\npar(mfrow=c(2,2))\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tempines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\n\n\n\n\n\npar(mfrow=c(2,2))\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Chou Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#testing-with-clar-and-evans",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#testing-with-clar-and-evans",
    "title": "Hands on Excerise 4",
    "section": "8.1 Testing with Clar and Evans",
    "text": "8.1 Testing with Clar and Evans\n\nclarkevans.test(childcareSG_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 99 simulations of CSR with fixed n\n\ndata:  childcareSG_ppp\nR = 0.54756, p-value = 0.01\nalternative hypothesis: clustered (R < 1)\n\n\n\n\n\n\n\n\nNote\n\n\n\nPossible Conclusion that it might not be randomly distributed."
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#clark-and-evans-test-on-cck-planning-area",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#clark-and-evans-test-on-cck-planning-area",
    "title": "Hands on Excerise 4",
    "section": "8.2 Clark and Evans Test On CCK Planning Area",
    "text": "8.2 Clark and Evans Test On CCK Planning Area\n\nclarkevans.test(childcare_ck_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 999 simulations of CSR with fixed n\n\ndata:  childcare_ck_ppp\nR = 0.94642, p-value = 0.126\nalternative hypothesis: two-sided"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#clark-and-evans-test-on-tampinese-planning-area",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#clark-and-evans-test-on-tampinese-planning-area",
    "title": "Hands on Excerise 4",
    "section": "8.3 Clark and Evans Test On Tampinese Planning Area",
    "text": "8.3 Clark and Evans Test On Tampinese Planning Area\n\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 999 simulations of CSR with fixed n\n\ndata:  childcare_tm_ppp\nR = 0.7928, p-value = 0.002\nalternative hypothesis: two-sided"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#choa-chu-kang-area",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#choa-chu-kang-area",
    "title": "Hands on Excerise 4",
    "section": "9.1 Choa Chu Kang Area",
    "text": "9.1 Choa Chu Kang Area\n\n9.1.1 Computing G Function estimation\n\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n\n\n\n\n\n\n9.1.2 Performing Complete Spatial Randomness Test\n\nG_CK.csr <- envelope(childcare_ck_ppp, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(G_CK.csr)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#tampinese-planning-area",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#tampinese-planning-area",
    "title": "Hands on Excerise 4",
    "section": "9.2 Tampinese Planning Area",
    "text": "9.2 Tampinese Planning Area\n\n9.2.1 Computing G Function\n\nG_tm = Gest(childcare_tm_ppp, correction = \"best\")\nplot(G_tm)\n\n\n\n\n\n\n9.2.2 Performing Complete Spatial Randomness Test\n\nG_tm.csr <- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(G_tm.csr)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#choa-chu-kang",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#choa-chu-kang",
    "title": "Hands on Excerise 4",
    "section": "10.1 Choa Chu Kang",
    "text": "10.1 Choa Chu Kang\n\n10.1.1 Computing F Function Estimate\n\nF_CK = Fest(childcare_ck_ppp)\nplot(F_CK)\n\n\n\n\n\n\n10.1.2 Complete Spatial Randomness Test\n\nF_CK.csr <- envelope(childcare_ck_ppp, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(F_CK.csr)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#tampines",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#tampines",
    "title": "Hands on Excerise 4",
    "section": "10.2 Tampines",
    "text": "10.2 Tampines\n\n10.2.1 Computing F Function Estimate\n\nF_tm = Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n\n\n\n\n\n\n10.2.2 Complete Spatial Randomness Test\n\nF_tm.csr <- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(F_tm.csr)"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#choa-chu-kang-1",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#choa-chu-kang-1",
    "title": "Hands on Excerise 4",
    "section": "11.1 Choa Chu Kang",
    "text": "11.1 Choa Chu Kang\n\n11.1.1 Computing K Function Estimate\n\nK_ck = Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n11.1.2 Complete Spatial Randomness Test\n\nK_ck.csr <- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#tampines-1",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#tampines-1",
    "title": "Hands on Excerise 4",
    "section": "11.2 Tampines",
    "text": "11.2 Tampines\n\n11.2.1 Computing K Function Estimate\n\nK_tm = Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n11.2.2 Complete Spatial Randomness Test\n\nK_tm.csr <- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(K_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"K(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#choa-chu-kang-2",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#choa-chu-kang-2",
    "title": "Hands on Excerise 4",
    "section": "12.1 Choa Chu Kang",
    "text": "12.1 Choa Chu Kang\n\n12.1.1 Computing L Function Estimate\n\n\n\n\n\n\nNote\n\n\n\nThis is a plot without simulation, therefore this is an estimate.\nCorrection extends the boundary so that we can see more the point at the edge.\n\n\n\nL_ck = Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n12.1.2 Complete Spatial Randomness Test\n\n\n\n\n\n\nNote\n\n\n\nThe envelope method perform the monte carlo simulation of the point. the number of simulation is based on the confidence level.\n\n\n\nL_ck.csr <- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nBased on the graph below. As long as the line is below boundary, it is statistically insignificant. In the Prof example, the distance between 480 and 580, is statistically significant to proof that there is clustering\n\n\n\nplot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")"
  },
  {
    "objectID": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#tampines-2",
    "href": "lessons/Hands-on/Hands-on-Ex4/Hands-on-Ex4.knit.html#tampines-2",
    "title": "Hands on Excerise 4",
    "section": "12.2 Tampines",
    "text": "12.2 Tampines\n\n12.2.1 Computing L Function Estimate\n\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n12.2.2 Complete Spatial Randomness Test\n\nL_tm.csr <- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "lessons/In-class/in-class_ex5/data/stores.html",
    "href": "lessons/In-class/in-class_ex5/data/stores.html",
    "title": "IS415-GAA-HX",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     \n\n\n        0 0     false"
  },
  {
    "objectID": "lessons/In-class/in-class_ex5/data/study_area.html",
    "href": "lessons/In-class/in-class_ex5/data/study_area.html",
    "title": "IS415-GAA-HX",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#packages",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#packages",
    "title": "Take Home Exercise 1",
    "section": "Packages",
    "text": "Packages\n\nsf: used for importing, managing, and processing geospatial data\ntidyverse: for performing data science tasks such as importing, wrangling and visualising data.\ntmap: used for creating thematic maps, such as choropleth and bubble maps\nspatstat: used for point pattern analysis\nraster: reads, writes, manipulates, analyses and models gridded spatial data (i.e. raster-based geographical data)\nmaptools: a set of tools for manipulating geographic data\nfunModeling: contains a set of functions related to exploratory data analysis, data preparation, and model performance"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#installing-and-loading-the-packages",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#installing-and-loading-the-packages",
    "title": "Take Home Exercise 1",
    "section": "Installing and Loading the Packages",
    "text": "Installing and Loading the Packages\nThe code chunk below will be used to install and load these packages in RStudio.\n\npacman::p_load(maptools, sf, raster, spatstat, tmap, tidyverse, funModeling)\n\nThis prepares all the tools necessary for us to start or spatial analysis."
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#dataset-used",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#dataset-used",
    "title": "Take Home Exercise 1",
    "section": "Dataset used",
    "text": "Dataset used\n2 datasets are used for this excercise\n\nThe First Dataset used would be the Level 2 Administrative Boundary which can be found either from Geoboundaries or Humanitarian Data Exchange\nWaterpoint Data Repositories is the dataset for the waterpoint"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#importing-geospatial-dataframe",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#importing-geospatial-dataframe",
    "title": "Take Home Exercise 1",
    "section": "Importing Geospatial Dataframe",
    "text": "Importing Geospatial Dataframe\n\n\n\n\n\n\nNote\n\n\n\nNeed to double check the CRS as it is depending on the system used by the country.\nSince the country we are focusing on is Nigeria. The EPSG code is 26392., and it encompasses the entire area of Nigeria.\n\n\nWe will be using the st_read() function from the sf package to read the data set. More information on st_read() can be found here..\nHowever, as the polygon data is not in the correct format, there will be a need to convert the geometric data to the correct form. st_transform from the sf package is used to so. More information on st_transform() can be found here\n\ngeoBoundaries data set\nThis dataset loads the boundaries of Nigeria from geoBoundaries\n\ngeoNGA <- st_read(\"data/geospatial/\",\n                  layer = \"geoBoundaries-NGA-ADM2\") %>%\n  st_transform(crs = 26392)\n\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\Take-home\\Take-home_ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\ngeoNGA contains the following data:\n\n\n\nColumns Name\nDescription\n\n\n\n\nshapeName\nName of the Level 2 Boundaries\n\n\npcode\nUnique Code\n\n\nlevel\nADM2 (Indicating this is a Level 2 Boundaries)\n\n\nshapeID\nUnique Code of the Shape\n\n\nshapeGroup\nNGA (Indicating Nigeria)\n\n\nshapeType\nADM2 (Indicating this is a Level 2 Boundaries)\n\n\ngeometry\nPolygon Data\n\n\n\n\n\nNGA Data set (Humanitarian Data Exchange)\n\n\n\n\n\n\nNote\n\n\n\nThe NGA Dataset is essentially the same as geoBoundaries dataset with the exception that the dataset in geoBoundaries is more condense.\n\n\n\nNGA <- st_read(\"data/geospatial/\",\n               layer = \"nga_admbnda_adm2_osgof_20190417\") %>%\n  st_transform(crs = 26392)\n\nReading layer `nga_admbnda_adm2_osgof_20190417' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\Take-home\\Take-home_ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\nNGA contains the following data:\n\n\n\nColumn Name\nDescription\n\n\n\n\nShape_Leng\nLength of the Shape\n\n\nShape_Area\nArea of the Shape\n\n\nADM2_EN\nEnglish Name of ADM2\n\n\nADM2_PCODE\nUnique ID of the ADM2\n\n\nADM2_REF\nA Reference to ADM2_EN\n\n\nADM2ALT1EN\nAlternative English Name\n\n\nADM2ALT2EN\nAlternative English Name\n\n\nADM1_EN\nADM1 English Name\n\n\nADM1_PCODE\nUnique ID of ADM1\n\n\nADM0_EN\nADM0 English Name\n\n\nADM0_PCODE\nUnique ID of ADM0\n\n\ndate\nDate of the boundaries\n\n\nvalidOn\nValid Date of the Boundaries\n\n\nvalidTo\nEnd of Valid Date of the Boundaries\n\n\nSD_EN\nSenatorial District\n\n\nSD_PCODE\nUnique Code of the Senatorial District\n\n\ngeometry\nPolygon Data\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nAs NGA seems to offer a more richer data set the rest of the analysis will be done on the NGA Data set"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#importing-aspatial-data",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#importing-aspatial-data",
    "title": "Take Home Exercise 1",
    "section": "Importing Aspatial Data",
    "text": "Importing Aspatial Data\n\nLoading the dataset from CSV\nThe next dataset that we will be loading would be the waterpoint dataset. As the dataset is found in the CSV another function read_csv(), which will import the csv as a tibble dataset. Read more about read_csv() from readr here.\n\n\n\n\n\n\nNote\n\n\n\nAs the CSV contain almost 70 variables and more than 10000 observations it would be better to filter the dataset to the country of interest, in this case, Nigeria. Read more about filter() from dplyr here.\n\n\n\nwp_nga <- read_csv(\"data/aspatial/WPdx.csv\") %>%\n  filter(`#clean_country_name` == \"Nigeria\")\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n\n\nRows: 406566 Columns: 70\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (43): #source, #report_date, #status_id, #water_source_clean, #water_sou...\ndbl (23): row_id, #lat_deg, #lon_deg, #install_year, #fecal_coliform_value, ...\nlgl  (4): #rehab_year, #rehabilitator, is_urban, latest_record\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nConverting the water point data into sf point feature.\nDespite loading the aspatial dataframe into a tibble data frame, we would need to convert the dataframe into an sf data frame for us to perform Geospatial Analysis.\nThe column “New Georeferenced Column” contain the spatial data is a well-known text representation of geometry, as the such the fuction st_as_sfc() can be used to convert that into a sfc object. Read more about st_as_sfc() from sf here. We will append the sfc object into a new Column called “Geometry”.\n\nwp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)\nwp_nga\n\n# A tibble: 95,008 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n    <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429068 GRID3             7.98    5.12 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2 222071 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n 3 160612 WaterAid          6.49    7.93 12/04/… Yes     Boreho… Well    Hand P…\n 4 160669 WaterAid          6.73    7.65 12/04/… Yes     Boreho… Well    <NA>   \n 5 160642 WaterAid          6.78    7.66 12/04/… Yes     Boreho… Well    Hand P…\n 6 160628 WaterAid          6.96    7.78 12/04/… Yes     Boreho… Well    Hand P…\n 7 160632 WaterAid          7.02    7.84 12/04/… Yes     Boreho… Well    Hand P…\n 8 642747 Living Water …    7.33    8.98 10/03/… Yes     Boreho… Well    Mechan…\n 9 642456 Living Water …    7.17    9.11 10/03/… Yes     Boreho… Well    Hand P…\n10 641347 Living Water …    7.20    9.22 03/28/… Yes     Boreho… Well    Hand P…\n# … with 94,998 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n\n\nNow than we have a tibble data frame we would need to convert the data frame into a sf object using st_sf(). Read more about st_sf() here.\n\n\n\n\n\n\nImportant\n\n\n\nIt is important to note that the sfc object in the Geometry column does not contain the correct referencing system. There is a need to transform the projection into a WGS 84. The EPSG code is 4326.\n\n\n\nwp_sf <- st_sf(wp_nga, crs=4326)\nwp_sf\n\nSimple feature collection with 95008 features and 70 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 2.707441 ymin: 4.301812 xmax: 14.21828 ymax: 13.86568\nGeodetic CRS:  WGS 84\n# A tibble: 95,008 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n *  <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429068 GRID3             7.98    5.12 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2 222071 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n 3 160612 WaterAid          6.49    7.93 12/04/… Yes     Boreho… Well    Hand P…\n 4 160669 WaterAid          6.73    7.65 12/04/… Yes     Boreho… Well    <NA>   \n 5 160642 WaterAid          6.78    7.66 12/04/… Yes     Boreho… Well    Hand P…\n 6 160628 WaterAid          6.96    7.78 12/04/… Yes     Boreho… Well    Hand P…\n 7 160632 WaterAid          7.02    7.84 12/04/… Yes     Boreho… Well    Hand P…\n 8 642747 Living Water …    7.33    8.98 10/03/… Yes     Boreho… Well    Mechan…\n 9 642456 Living Water …    7.17    9.11 10/03/… Yes     Boreho… Well    Hand P…\n10 641347 Living Water …    7.20    9.22 03/28/… Yes     Boreho… Well    Hand P…\n# … with 94,998 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n\n\nMuch like the Handling of the Geospatial data above, there is a need to conver the WGS84 projection to the projection coordinate system of Nigeria as well.\n\nwp_sf <- wp_sf %>%\n  st_transform(crs = 26392)"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#excluding-redundent-fields",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#excluding-redundent-fields",
    "title": "Take Home Exercise 1",
    "section": "Excluding Redundent Fields",
    "text": "Excluding Redundent Fields\nTaking a look at the columns (NGA Data set (Humanitarian Data Exchange))of the NGA sf dataframe, we could identify most of the redundent fields. The only field that really matters would be the columns\n\n\n\n\n\n\n\nColumns to Keep\nReasons\n\n\n\n\nADM2_EN\nThis is the English Name of the ADM2. This is where the Local Government Area.\n\n\nADM2_PCODE\nThis is the unique identifier of ADM2\n\n\nADM1_EN\nThis is the English Name of the ADM1. This is where the States of Nigeria is.\n\n\nADM1_PCODE\nThis is the unique identifier of ADM1\n\n\n\n\nNGA <- NGA %>%\n  select(c(3:4, 8:9))"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#checking-for-duplicate-name",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#checking-for-duplicate-name",
    "title": "Take Home Exercise 1",
    "section": "Checking for Duplicate Name",
    "text": "Checking for Duplicate Name\nWe need to ensure that there is no duplicate name in the data. In this case, we only really care about checking for duplicate names in Local Government Area or ADM2. One method we can used to check for duplicated name would the used of the duplicated() function. Find out about the duplicated() from base R here.\n\nNGA$ADM2_EN[duplicated(NGA$ADM2_EN)==TRUE]\n\n[1] \"Bassa\"    \"Ifelodun\" \"Irepodun\" \"Nasarawa\" \"Obi\"      \"Surulere\"\n\n\nNow that we know that there are similarities in the name we would need to examine the duplicate field more closely. One method we can used to check if the duplicated data are the same would be to take a look at their unique pcode.\n\nNGA$ADM2_PCODE[duplicated(NGA$ADM2_PCODE)==TRUE]\n\ncharacter(0)\n\n\nNow that we have establised that each of ADM2_PCODE is different, we can determined that the ADM2 names are the same but are referencing different area. In this case, there will be a need to correct the names of the ADM2_EN so that there will be no duplicate data.\n\n\n\n\n\n\nTip\n\n\n\nA Google Search can be performed as well to double check they are indeed different area.\n\n\n\nNGA$ADM2_EN[94] <- \"Bassa, Kogi\"\nNGA$ADM2_EN[95] <- \"Bassa, Plateau\"\nNGA$ADM2_EN[304] <- \"Ifelodun, Kwara\"\nNGA$ADM2_EN[305] <- \"Ifelodun, Osun\"\nNGA$ADM2_EN[355] <- \"Irepodun, Kwara\"\nNGA$ADM2_EN[356] <- \"Irepodun, Osun\"\nNGA$ADM2_EN[519] <- \"Nasarawa, Kano\"\nNGA$ADM2_EN[520] <- \"Nasarawa, Nasarawa\"\nNGA$ADM2_EN[546] <- \"Obi, Benue\"\nNGA$ADM2_EN[547] <- \"Obi, Nasarawa\"\nNGA$ADM2_EN[693] <- \"Surulere, Lagos\"\nNGA$ADM2_EN[694] <- \"Surulere, Oyo\"\n\nNow, we would need to confirm that the duplicated name issues has been addressed already.\n\nNGA$ADM2_EN[duplicated(NGA$ADM2_EN)==TRUE]\n\ncharacter(0)"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#extracting-the-water-point-data",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#extracting-the-water-point-data",
    "title": "Take Home Exercise 1",
    "section": "Extracting the Water Point Data",
    "text": "Extracting the Water Point Data\nWith some basic understanding of the water point, we can now categories the water point data. From the graph above we can categories it into the following method.\n\nThis is to extract functional water point\n\n\nWaterpoint Category\nStatus\n\n\n\n\nFunctional\nFunctional\n\n\nFunctional\nFunctional but not in use\n\n\nFunctional\nFunctional but needs repair\n\n\nNon Functional\nAbandoned/Decommissioned\n\n\nNon Functional\nAbandoned\n\n\nNon Functional\nNon-Functional due to dry season\n\n\nNon Functional\nNon-Functional\n\n\nNon Functional\nNon functional due to dry season\n\n\nUnknown\nUnknown\n\n\n\n\nwp_functional <- wp_sf_nga %>%\n  filter(status_clean %in%\n           c(\"Functional\",\n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n\n\nwp_functional\n\nSimple feature collection with 52148 features and 1 field\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 29322.63 ymin: 33758.37 xmax: 1218553 ymax: 1092629\nProjected CRS: Minna / Nigeria Mid Belt\n# A tibble: 52,148 × 2\n   status_clean            Geometry\n * <chr>                <POINT [m]>\n 1 Functional   (128394.3 330487.9)\n 2 Functional   (464684.4 94532.59)\n 3 Functional   (588792.3 74102.03)\n 4 Functional     (459153.3 171705)\n 5 Functional   (586703.9 75701.92)\n 6 Functional      (612461.7 87149)\n 7 Functional     (503439 87320.23)\n 8 Functional   (599467.7 92205.82)\n 9 Functional   (651470.8 101586.9)\n10 Functional   (650819.3 104796.9)\n# … with 52,138 more rows\n\n\nThis is to extract nonfunctional water point.\n\nwp_nonfunctional <- wp_sf_nga %>%\n  filter(status_clean %in%\n           c(\"Abandoned/Decommissioned\",\n             \"Abandoned\",\n             \"Non-Functional due to dry season\",\n             \"Non-Functional\",\n             \"Non functional due to dry season\"))\n\n\nwp_nonfunctional\n\nSimple feature collection with 32204 features and 1 field\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 28907.91 ymin: 33736.93 xmax: 1209690 ymax: 1092883\nProjected CRS: Minna / Nigeria Mid Belt\n# A tibble: 32,204 × 2\n   status_clean                        Geometry\n * <chr>                            <POINT [m]>\n 1 Abandoned/Decommissioned (578642.2 141523.1)\n 2 Abandoned/Decommissioned (571655.4 70856.98)\n 3 Abandoned/Decommissioned   (571629.5 143544)\n 4 Abandoned/Decommissioned (608748.8 141693.1)\n 5 Abandoned/Decommissioned (576876.2 66860.76)\n 6 Abandoned/Decommissioned   (698288 224655.8)\n 7 Abandoned/Decommissioned (698293.1 224809.4)\n 8 Abandoned/Decommissioned (341287.7 459644.6)\n 9 Abandoned/Decommissioned (402193.2 89488.33)\n10 Abandoned/Decommissioned (589410.8 147917.3)\n# … with 32,194 more rows\n\n\nThis is to extract unknown water point\n\nwp_unknown <- wp_sf_nga %>%\n  filter(status_clean == \"unknown\")\n\n\nwp_unknown\n\nSimple feature collection with 10656 features and 1 field\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 29143.21 ymin: 36660.5 xmax: 1293293 ymax: 965811.9\nProjected CRS: Minna / Nigeria Mid Belt\n# A tibble: 10,656 × 2\n   status_clean            Geometry\n * <chr>                <POINT [m]>\n 1 unknown      (297874.6 441473.8)\n 2 unknown      (607559.4 274905.5)\n 3 unknown      (576523.1 301556.6)\n 4 unknown      (578321.7 307339.8)\n 5 unknown      (590994.2 326738.8)\n 6 unknown      (597909.2 333608.5)\n 7 unknown      (724171.9 367609.1)\n 8 unknown      (737994.1 350616.5)\n 9 unknown      (749790.1 354304.6)\n10 unknown      (728109.9 367079.1)\n# … with 10,646 more rows"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#eda-on-waterpoints",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#eda-on-waterpoints",
    "title": "Take Home Exercise 1",
    "section": "EDA on waterpoints",
    "text": "EDA on waterpoints\nNow that we have extracted the water point data, we can have a better look at water points from each category.\nThis is for Functional Water point\n\nfreq(data = wp_functional,\n     input = 'status_clean')\n\n\n\n\n                 status_clean frequency percentage cumulative_perc\n1                  Functional     45883      87.99           87.99\n2 Functional but needs repair      4579       8.78           96.77\n3   Functional but not in use      1686       3.23          100.00\n\n\nThis is for Non Functional Water Point\n\nfreq(data = wp_nonfunctional,\n     input = 'status_clean')\n\n\n\n\n                      status_clean frequency percentage cumulative_perc\n1                   Non-Functional     29385      91.25           91.25\n2 Non-Functional due to dry season      2403       7.46           98.71\n3         Abandoned/Decommissioned       234       0.73           99.44\n4                        Abandoned       175       0.54           99.98\n5 Non functional due to dry season         7       0.02          100.00\n\n\nThis is Unknown Water Point\n\nfreq(data = wp_unknown,\n     input = 'status_clean')\n\n\n\n\n  status_clean frequency percentage cumulative_perc\n1      unknown     10656        100             100"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#performing-point-in-polygon-count.",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#performing-point-in-polygon-count.",
    "title": "Take Home Exercise 1",
    "section": "Performing Point In Polygon Count.",
    "text": "Performing Point In Polygon Count.\nWhile knowing the number of total functional and nonfunctional and unknown water point is important, it would be better if we are able to see the status of each water point in each of the LGA.\nTo do that we would need to perform a series of steps.\n\nWe would need to make use of the st_intersects() function of sf package to identify the functional water points in each LGA. Find out more about st_intersects() function of sf package here\nWe would need to make use of lengths() function from base r to calculate the number of functional water points that fall inside each LGA. Find out more about lengths() function of base r here.\n\nAll of this is added to a new sf data frame “NGA_wp” to be used in subsequent steps.\n\nNGA_wp <- NGA %>% \n  mutate(`total_wp` = lengths(\n    st_intersects(NGA, wp_sf_nga))) %>%\n  mutate(`wp_functional` = lengths(\n    st_intersects(NGA, wp_functional))) %>%\n  mutate(`wp_nonfunctional` = lengths(\n    st_intersects(NGA, wp_nonfunctional))) %>%\n  mutate(`wp_unknown` = lengths(\n    st_intersects(NGA, wp_unknown)))"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#visualising-attributes",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#visualising-attributes",
    "title": "Take Home Exercise 1",
    "section": "Visualising Attributes",
    "text": "Visualising Attributes\nNow that we have the point in polygon count we can reveal the distribution of the waterpoint.\nWe can make use of the ggplot2 packages to help plot. ggplot2 is part of tidyverse, and more information can be found here.\nDistribution of Total Water point\n\nggplot(data = NGA_wp,\n       aes(x = wp_functional)) + \n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept=mean(\n    total_wp, na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=0.8) +\n  ggtitle(\"Distribution of total water points by LGA\") +\n  xlab(\"No. of water points\") +\n  ylab(\"No. of\\nLGAs\") +\n  theme(axis.title.y=element_text(angle = 0))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\nDistribution of Functional Water point\n\nggplot(data = NGA_wp,\n       aes(x = wp_nonfunctional)) + \n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept=mean(\n    total_wp, na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=0.8) +\n  ggtitle(\"Distribution of total water points by LGA\") +\n  xlab(\"No. of water points\") +\n  ylab(\"No. of\\nLGAs\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\nDistribution of Non Functional Water point\n\nggplot(data = NGA_wp,\n       aes(x = total_wp)) + \n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept=mean(\n    total_wp, na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=0.8) +\n  ggtitle(\"Distribution of total water points by LGA\") +\n  xlab(\"No. of water points\") +\n  ylab(\"No. of\\nLGAs\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\nDistribution of Unknown Water point\n\nggplot(data = NGA_wp,\n       aes(x = wp_unknown)) + \n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept=mean(\n    total_wp, na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=0.8) +\n  ggtitle(\"Distribution of total water points by LGA\") +\n  xlab(\"No. of water points\") +\n  ylab(\"No. of\\nLGAs\") +\n  theme(axis.title.y=element_text(angle = 0))"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#converting-sf-data-to-sps-spatial-class",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#converting-sf-data-to-sps-spatial-class",
    "title": "Take Home Exercise 1",
    "section": "Converting sf data to sp’s Spatial Class",
    "text": "Converting sf data to sp’s Spatial Class\nAs sp’s Spatial Class is still commonly used by most of the spatial analysis packages as such we would need to convert the data frame into Spatial Class.\nThis can be done with the function as_Spatial() function of the sf package. Find out more about as_Spatial() from sf package here.\n\nwp_functional_spatial <- as_Spatial(wp_functional)\nwp_nonfunctional_spatial <- as_Spatial(wp_nonfunctional)\nNGA_spatial <- as_Spatial(NGA)\n\n\nViewing each of the sp Spatial Class\nHere we will view the Spatial Class of the converted data frame.\nFunctional\n\nwp_functional_spatial \n\nclass       : SpatialPointsDataFrame \nfeatures    : 52148 \nextent      : 29322.63, 1218553, 33758.37, 1092629  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \nvariables   : 1\nnames       :              status_clean \nmin values  :                Functional \nmax values  : Functional but not in use \n\n\nNon Functional\n\nwp_nonfunctional_spatial\n\nclass       : SpatialPointsDataFrame \nfeatures    : 32204 \nextent      : 28907.91, 1209690, 33736.93, 1092883  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \nvariables   : 1\nnames       :                     status_clean \nmin values  :                        Abandoned \nmax values  : Non functional due to dry season \n\n\nNGA\n\nNGA_spatial\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 774 \nextent      : 26662.71, 1344157, 30523.38, 1096029  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \nvariables   : 4\nnames       :   ADM2_EN, ADM2_PCODE, ADM1_EN, ADM1_PCODE \nmin values  : Aba North,   NG001001,    Abia,      NG001 \nmax values  :      Zuru,   NG037014, Zamfara,      NG037"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#converting-the-spatial-class-into-generic-sp-format",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#converting-the-spatial-class-into-generic-sp-format",
    "title": "Take Home Exercise 1",
    "section": "Converting the Spatial Class into generic sp format",
    "text": "Converting the Spatial Class into generic sp format\nThe main package that we are using to analyse out data would be spatstat. However, this requires our analytical data to be in the ppp object form.\nHowever, there is no direct way for us to convert a Spatial class into a ppp object. It would need to be converted into a Spatial object first before we can convert it into a ppp object.\nWe can make use of the as() function from basic R to convert it into a Spatial Object. Find out more about as() function here.\n\n\n\n\n\n\nNote\n\n\n\nNote that we are converting the point into Spatial Points, while we are converting the boundaries into “Spatial Polygons”\n\n\n\nwp_functional_sp <- as(wp_functional_spatial, \"SpatialPoints\")\nwp_nonfunctional_sp <- as(wp_nonfunctional_spatial, \"SpatialPoints\")\nNGA_sp <- as(NGA_spatial, \"SpatialPolygons\")\n\n\nViewing each of the Spatial Points\nFunctional\n\nwp_functional_sp \n\nclass       : SpatialPoints \nfeatures    : 52148 \nextent      : 29322.63, 1218553, 33758.37, 1092629  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \n\n\nNon Functional\n\nwp_nonfunctional_sp\n\nclass       : SpatialPoints \nfeatures    : 32204 \nextent      : 28907.91, 1209690, 33736.93, 1092883  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \n\n\nNGA\n\nNGA_sp\n\nclass       : SpatialPolygons \nfeatures    : 774 \nextent      : 26662.71, 1344157, 30523.38, 1096029  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#converting-into-spatstas-ppp-format",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#converting-into-spatstas-ppp-format",
    "title": "Take Home Exercise 1",
    "section": "Converting into spatstas ppp format",
    "text": "Converting into spatstas ppp format\nWe can now convert the Spatial Object into a ppp format\n\nwp_functional_ppp <- as(wp_functional_sp , \"ppp\")\nwp_nonfunctional_ppp <- as(wp_nonfunctional_sp , \"ppp\")\n\n\nViewing each ppp format\nFunctional\n\nwp_functional_ppp\n\nPlanar point pattern: 52148 points\nwindow: rectangle = [29322.6, 1218553.3] x [33758.4, 1092628.9] units\n\n\nNon Functional\n\nwp_nonfunctional_ppp\n\nPlanar point pattern: 32204 points\nwindow: rectangle = [28907.9, 1209690] x [33736.9, 1092882.6] units\n\n\n\n\nChecking for Duplicate Points\n\n\n\n\n\n\nNote\n\n\n\nIt is important to check for Duplicate Points, and there are many methods of handling duplicate points such as rjitter().\n\n\nWe would now need to perform a check to make sure that there is no duplicated points. which we can check using the\n\nany(duplicated(wp_functional_ppp))\n\n[1] FALSE\n\n\n\nany(duplicated(wp_nonfunctional_ppp))\n\n[1] FALSE\n\n\nSince the result is False, it seems that there is no special need to perform other actions to fix the duplicated data."
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#creating-owin-object",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#creating-owin-object",
    "title": "Take Home Exercise 1",
    "section": "Creating Owin Object",
    "text": "Creating Owin Object\n\n\n\n\n\n\nNote\n\n\n\nAn owin object is used to define the polygonal region of the Region of interest.\n\n\nWe will now wish to confine the geographical area boundary to that of Nigeria, as such we can convert the Spatial Polygon object into owin to help us represent this polygonal region.\n\nNGA_owin <- as(NGA_sp, \"owin\")\n\n\nPlotting the Owin\n\nplot(NGA_owin)\n\n\n\n\n\n\nCombining Non Functional Water Point and Functional Water Point with Owin\nNow then we can extract the water point events and combine it with the owin data.\n\nwp_functional_NGA_ppp = wp_functional_ppp[NGA_owin]\n\n\nwp_nonfunctional_NGA_ppp = wp_nonfunctional_ppp[NGA_owin]\n\n\n\nPlotting the Owin Object with Water Points\nNow we will plot the owin object to see if we it was successful.\nFunctional\n\nplot(wp_functional_NGA_ppp)\n\n\n\n\nNon Functional\n\nplot(wp_nonfunctional_NGA_ppp)"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#rescaling-the-kde-values",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#rescaling-the-kde-values",
    "title": "Take Home Exercise 1",
    "section": "Rescaling the KDE values",
    "text": "Rescaling the KDE values\nOne issue with the ppp data is that the unit of measurement is in meters, which will cause out density values to be very small.\nAs such there is a needed to convert the unit measurement into kilometer in order for the density to make better sense.\n\nwp_functional_NGA_ppp.km <- rescale(wp_functional_NGA_ppp, 1000, \"km\")\nwp_nonfunctional_NGA_ppp.km <- rescale(wp_nonfunctional_NGA_ppp, 1000, \"km\")"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#plotting-the-kernal-density",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#plotting-the-kernal-density",
    "title": "Take Home Exercise 1",
    "section": "Plotting the Kernal Density",
    "text": "Plotting the Kernal Density\n\nwp_functional_NGA.bw <- density(wp_functional_NGA_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(wp_functional_NGA.bw)\n\n\n\n\n\nwp_nonfunctional_NGA.bw <- density(wp_nonfunctional_NGA_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(wp_nonfunctional_NGA.bw)"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#converting-to-grid-object",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#converting-to-grid-object",
    "title": "Take Home Exercise 1",
    "section": "Converting to Grid Object",
    "text": "Converting to Grid Object\nWe would need to convert the KDE into a suitable format for mapping purpose. The format we are converting would be a Grid Object\nFunctional\n\ngridded_kde_wp_functional_NG_bw <- as.SpatialGridDataFrame.im(wp_functional_NGA.bw)\nspplot(gridded_kde_wp_functional_NG_bw)\n\n\n\n\nNon Functional\n\ngridded_kde_wp_nonfunctional_NG_bw <- as.SpatialGridDataFrame.im(wp_nonfunctional_NGA.bw)\nspplot(gridded_kde_wp_nonfunctional_NG_bw)"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#converting-to-raster",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#converting-to-raster",
    "title": "Take Home Exercise 1",
    "section": "Converting to Raster",
    "text": "Converting to Raster\nAfter we have converted the data into a Grid Object we would need to convert that into a Raster Layer. We can make use of raster() function of raster package to help us convert. Find out more about raster package here.\nRaster object is accepted by tmap as one of the layer for plotting. as such we will be converting it into a raster object\n\nkde_wp_functional_NG_bw_raster <- raster(gridded_kde_wp_functional_NG_bw)\nkde_wp_nonfunctional_NG_raster <- raster(gridded_kde_wp_nonfunctional_NG_bw)\n\n\n\n\n\n\n\nNote\n\n\n\nHowever, a raster object does not have any CRS information. We would need to project the CRS information into the raster layer. In this case the EPSG code is 26392.\n\n\n\nprojection(kde_wp_functional_NG_bw_raster) <- CRS(\"+init=EPSG:26392\")\nprojection(kde_wp_nonfunctional_NG_raster) <- CRS(\"+init=EPSG:26392\")\n\n\nViewing Raster Object\nFunctional\n\nkde_wp_functional_NG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 10.29292, 8.324266  (x, y)\nextent     : 26.66271, 1344.157, 30.52338, 1096.029  (xmin, xmax, ymin, ymax)\ncrs        : +init=EPSG:26392 \nsource     : memory\nnames      : v \nvalues     : -4.383912e-16, 4.843545  (min, max)\n\n\nNon Functional\n\nkde_wp_nonfunctional_NG_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 10.29292, 8.324266  (x, y)\nextent     : 26.66271, 1344.157, 30.52338, 1096.029  (xmin, xmax, ymin, ymax)\ncrs        : +init=EPSG:26392 \nsource     : memory\nnames      : v \nvalues     : -2.410108e-16, 1.517255  (min, max)"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#extracting-osun-state-from-nga",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#extracting-osun-state-from-nga",
    "title": "Take Home Exercise 1",
    "section": "Extracting Osun State from NGA",
    "text": "Extracting Osun State from NGA\nWe can now perform the same steps as above to generate the Kernal Density Map of Osun Area.\n\nosun = NGA_spatial[NGA_spatial@data$ADM1_EN == \"Osun\",]\n\n\nplot(osun)\n\n\n\n\n\nosun_sp = as(osun, \"SpatialPolygons\")\n\n\nosun_owin = as(osun_sp, \"owin\")"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#testing-for-distribution-clarks-and-evens",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#testing-for-distribution-clarks-and-evens",
    "title": "Take Home Exercise 1",
    "section": "Testing for Distribution Clarks and Evens",
    "text": "Testing for Distribution Clarks and Evens\n\n\n\n\n\n\nNote\n\n\n\nClarks and Evants Test is a Test of Aggregation, Further Testing would need to be performed in order for us to determine if the Hypothesis is True. Find out more about clarksevans.test() here.\n\n\nThe test hypotheses are:\nHo = The distribution of water points in Osun are randomly distributed.\nH1= The distribution of water points in Osun are not randomly distributed.\nThe 95% confident interval will be used.\n\nclarkevans.test(wp_functional_osun_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 99 simulations of CSR with fixed n\n\ndata:  wp_functional_osun_ppp\nR = 0.44767, p-value = 0.01\nalternative hypothesis: clustered (R < 1)\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe therefore reject the null Hypothesis that the Functional water point are randomly distributed as the p-value is greater than 0.01.\n\n\n\nclarkevans.test(wp_nonfunctional_osun_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 99 simulations of CSR with fixed n\n\ndata:  wp_nonfunctional_osun_ppp\nR = 0.44327, p-value = 0.01\nalternative hypothesis: clustered (R < 1)\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe therefore reject the null Hypothesis that the non Functional water point are randomly distributed as the p-value is greater than 0.01."
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#analysis-of-functional-and-non-functional-water-point",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#analysis-of-functional-and-non-functional-water-point",
    "title": "Take Home Exercise 1",
    "section": "Analysis of Functional and Non Functional Water point",
    "text": "Analysis of Functional and Non Functional Water point\nWhen looking at the 2 Kernal Density Map, it is easy to assume that there seems to be almost no pattern on the density of the water point, however, one can easily assume that there is no pattern in where all the water points are located.\nHowever upon further inspection, there seems to be 2 trends that can be spotted based in the difference in map density. In other to help out in the spotting of the trend, a map of Osun from Google map was include below for the trend to be more easily view able.\n\nAreas with High Functional Water Point and Non Functional Water Point are clustered together in the cities in Osun.\n\n\n\nCopyrighted: Taken from Google Maps\n\n\nTaking a look at the map above and comparing it with the KDE Map, areas with high density of functional and non functional water points seems to coincide with where the cities are located. This seems to make the most sense as cities are where most people lives and need the access to water, as such it make sense most of the water point to concentrate itself in the cities.\nIn this regards, Large cities tend to have a larger concentration of functional and non functional water points as compared to smaller cities. On the other hand, areas of very low human density such as the Both Nature Reserve seem to have almost no Water Points whether they are functional or not.\n\n\n\n\n\n\nImportant\n\n\n\nBased on this observations, we can hypothesis that both the Functional Water Point and Non Functional Water Point are clustered together in the state of Osun. Further Validation using Second Spatial Point Pattern Analysis would need to be performed.\n\n\n\n\nFunctional and Non Functional Water Point are clustered together in cities of Osun\n\n\n\nFunctional Water Point KDE\n\n\n\n\n\nNon Functional Water Point KDE\n\n\nWe have already establish in the previous observation that Most of the Water Points in the Cities. When we observed the density of the Functional Water Points and Non Functional Water Points in the state, we come to a hypothesis that the water points are clustered together in the State of Osun. However, if we were to inspect the KDE of both water points more closely focusing on the cities, we have reason to believe that the functional water and non functional water points are clustered together among themselves in the cities as well.\nThe 2 images above are captures of the cities of Ede. Despite both being in the same city, the water points appeared to be clustered together as well. This can be observed in other points in the Functional Water Point KDE and Non Functional Water Point KDE as well.\n\n\n\n\n\n\nImportant\n\n\n\nBased on this observations, we can hypothesis that both the Functional Water Point and Non Functional Water Point are clustered together in the cities of the state of Osun. Further Validation using Second Spatial Point Pattern Analysis would need to be performed."
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#comparison-between-kernal-density-map-and-point-map.",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#comparison-between-kernal-density-map-and-point-map.",
    "title": "Take Home Exercise 1",
    "section": "Comparison between Kernal Density Map and Point Map.",
    "text": "Comparison between Kernal Density Map and Point Map.\n\nKernal Density Map are better at spotting trends as compared to Point Map\nKernal Density Map are much better at spotting trends as compared to that of the point map. A Point map will highlight each individual water point out and this can be difficult for us to determine any trend at all. With reference to the map in Mapping the Functional and Non Functional Points, there seems to be almost no difference in the density of the water points in the area, or at the very least it is difficult to tell. A Kernal Density Map solve this by smoothing over the points and providing a density number.\n\n\nKernal Density Map are less computationally intensive to display as compared to Point Map\nA Point Map with it thousands of points is more computationally intensive to display are compared to Kernal Density Map. This is because the computer would need to take note of every individual point and plot it out which would be an issue for computers with low computational power."
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#defining-the-areas",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#defining-the-areas",
    "title": "Take Home Exercise 1",
    "section": "Defining the Areas",
    "text": "Defining the Areas\n\niwo = NGA_spatial[NGA_spatial@data$ADM2_EN == \"Iwo\",] \nosogbo = NGA_spatial[NGA_spatial@data$ADM2_EN == \"Osogbo\",]\nede = NGA_spatial[NGA_spatial@data$ADM2_EN %in% c(\"Ede North\",\"Ede South\"),]\n\n\niwo_sp = as(iwo, \"SpatialPolygons\")\nosogbo_sp = as(osogbo, \"SpatialPolygons\")\nede_sp = as(ede, \"SpatialPolygons\")\n\n\niwo_owin = as(iwo, \"owin\")\nosogbo_owin = as(osogbo, \"owin\")\nede_owin = as(ede, \"owin\")\n\n\nwp_functional_iwo_ppp = wp_functional_ppp[iwo_owin]\nwp_nonfunctional_iwo_ppp = wp_nonfunctional_ppp[iwo_owin]\n\nwp_functional_osogbo_ppp = wp_functional_ppp[osogbo_owin]\nwp_nonfunctional_osogbo_ppp = wp_nonfunctional_ppp[osogbo_owin]\n\nwp_functional_ede_ppp = wp_functional_ppp[ede_owin]\nwp_nonfunctional_ede_ppp = wp_nonfunctional_ppp[ede_owin]\n\n\nwp_functional_iwo_ppp.km = rescale(wp_functional_iwo_ppp, 1000, \"km\")\nwp_nonfunctional_iwo_ppp.km = rescale(wp_nonfunctional_iwo_ppp, 1000, \"km\")\n\nwp_functional_osogbo_ppp.km = rescale(wp_functional_osogbo_ppp, 1000, \"km\")\nwp_nonfunctional_osogbo_ppp.km = rescale(wp_nonfunctional_osogbo_ppp, 1000, \"km\")\n\nwp_functional_ede_ppp.km = rescale(wp_functional_ede_ppp, 1000, \"km\")\nwp_nonfunctional_ede_ppp.km = rescale(wp_nonfunctional_ede_ppp, 1000, \"km\")"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#computing-g-score",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#computing-g-score",
    "title": "Take Home Exercise 1",
    "section": "Computing G Score",
    "text": "Computing G Score\n\nIwo\n\nFunctional Water Point\n\nH0: The distribution of the Functional Water Points in Iwo are randomly distributed\nH1: The distribution of the Functional Water Points in Iwo are not randomly distributed\nConfidence level : 99%\nSignificance level : 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.01.\n\n\nG_iwo_fuctional.csr <- envelope(wp_functional_iwo_ppp.km, Gest, nsim=100)\n\nGenerating 100 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,  100.\n\nDone.\n\n\n\nplot(G_iwo_fuctional.csr)\n\n\n\n\nConclusion: The observed G(r) is far above the G(theo) as well as the envelope - indicating that Functional Water Point in the Iwo area are clustered. Hence, we reject the null hypothesis that Functional Water Point in the Iwo area are randomly distributed at 99% confident interval.\n\n\nNon Functional Water Point\n\nH0: The distribution of the Non Functional Water Points in Iwo are randomly distributed\nH1: The distribution of the Non Functional Water Points in Iwo are not randomly distributed\nConfidence level : 99%\nSignificance level : 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.01.\n\n\nG_iwo_nonfuctional.csr <- envelope(wp_nonfunctional_iwo_ppp.km, Gest, nsim=100)\n\nGenerating 100 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,  100.\n\nDone.\n\n\n\nplot(G_iwo_nonfuctional.csr)\n\n\n\n\nConclusion: The observed G(r) is far above the G(theo) as well as the envelope - indicating that Non Functional Water Point in the Iwo area are clustered. Hence, we reject the null hypothesis that Non Functional Water Point in the Iwo area are randomly distributed at 99% confident interval.\n\n\n\nOsogbo\n\nFunctional Water Point\n\nH0: The distribution of the Functional Water Points in Osogbo are randomly distributed\nH1: The distribution of the Functional Water Points in Osogbo are not randomly distributed\nConfidence level : 99%\nSignificance level : 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.01.\n\n\nG_osogbo_fuctional.csr <- envelope(wp_functional_osogbo_ppp.km, Gest, nsim=100)\n\nGenerating 100 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,  100.\n\nDone.\n\n\n\nplot(G_osogbo_fuctional.csr)\n\n\n\n\nConclusion: The observed G(r) is far above the G(theo) as well as the envelope - indicating that Functional Water Point in the Osogbo area are clustered. Hence, we reject the null hypothesis that Functional Water Point in the Osogbo area are randomly distributed at 99% confident interval.\n\n\nNon Functional Water Point\n\nH0: The distribution of the Non Functional Water Points in Osogbo are randomly distributed\nH1: The distribution of the Non Functional Water Points in Osogbo are not randomly distributed\nConfidence level : 99%\nSignificance level : 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.01.\n\n\nG_osogbo_nonfuctional.csr <- envelope(wp_nonfunctional_osogbo_ppp.km, Gest, nsim=100)\n\nGenerating 100 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,  100.\n\nDone.\n\n\n\nplot(G_osogbo_nonfuctional.csr)\n\n\n\n\nConclusion: The observed G(r) is far above the G(theo) as well as the envelope - indicating that Non Functional Water Point in the Osobo area are clustered. Hence, we reject the null hypothesis that Non Functional Water Point in the Osobo area are randomly distributed at 99% confident interval.\n\n\n\nEde\n\nFunctional Water Point\n\nH0: The distribution of the Functional Water Points in Ede are randomly distributed\nH1: The distribution of the Functional Water Points in Ede are not randomly distributed\nConfidence level : 99%\nSignificance level : 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.01.\n\n\nG_ede_fuctional.csr <- envelope(wp_functional_ede_ppp.km, Gest, nsim=100)\n\nGenerating 100 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,  100.\n\nDone.\n\n\n\nplot(G_ede_fuctional.csr)\n\n\n\n\nConclusion: The observed G(r) is far above the G(theo) as well as the envelope - indicating that Functional Water Point in the Ede area are clustered. Hence, we reject the null hypothesis that Functional Water Point in the Ede area are randomly distributed at 99% confident interval.\n\n\nNon Functional Water Point\n\nH0: The distribution of the Non Functional Water Points in Ede are randomly distributed\nH1: The distribution of the Non Functional Water Points in Ede are not randomly distributed\nConfidence level : 99%\nSignificance level : 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.01.\n\n\nG_ede_nonfuctional.csr <- envelope(wp_nonfunctional_ede_ppp.km, Gest, nsim=100)\n\nGenerating 100 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,  100.\n\nDone.\n\n\n\nplot(G_ede_nonfuctional.csr)\n\n\n\n\nConclusion: The observed G(r) is far above the G(theo) as well as the envelope - indicating that Non Functional Water Point in the Ede area are clustered. Hence, we reject the null hypothesis that Non Functional Water Point in the Ede area are randomly distributed at 99% confident interval.\n\n\n\nOsun\n\nFunctional Water Point\n\nH0: The distribution of the Functional Water Points in Osun are randomly distributed\nH1: The distribution of the Functional Water Points in Osun are not randomly distributed\nConfidence level : 99%\nSignificance level : 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.01.\n\n\nG_osun_fuctional.csr <- envelope(wp_functional_osun_ppp.km, Gest, nsim=100)\n\nGenerating 100 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,  100.\n\nDone.\n\n\n\nplot(G_osun_fuctional.csr)\n\n\n\n\nConclusion: The observed G(r) is far above the G(theo) as well as the envelope - indicating that Functional Water Point in the Osun area are clustered. Hence, we reject the null hypothesis that Functional Water Point in the Osun area are randomly distributed at 99% confident interval.\n\n\nNon Functional Water Point\n\nH0: The distribution of the Non Functional Water Points in Ede are randomly distributed\nH1: The distribution of the Non Functional Water Points in Ede are not randomly distributed\nConfidence level : 99%\nSignificance level : 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.01.\n\n\nG_osun_nonfuctional.csr <- envelope(wp_nonfunctional_osun_ppp.km, Gest, nsim=100)\n\nGenerating 100 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,  100.\n\nDone.\n\n\n\nplot(G_osun_nonfuctional.csr)\n\n\n\n\nConclusion: The observed G(r) is far above the G(theo) as well as the envelope - indicating that Non Functional Water Point in the Osun area are clustered. Hence, we reject the null hypothesis that Functional Water Point in the Osun area are randomly distributed at 99% confident interval."
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#plotting-the-kernal-density-map",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#plotting-the-kernal-density-map",
    "title": "Take Home Exercise 1",
    "section": "Plotting the Kernal Density Map",
    "text": "Plotting the Kernal Density Map\nNow that we have rescaled the data set we can perform Kernel Density Estimation on the datasets.\nWe can make use of the density() function from the spatstat package to help us generate the Kernal Density map. Find out more about density() from spatstat here., We will making use of the automatic bandwidth methods here.\n\n\n\n\n\n\nNote\n\n\n\nOne thing to note is that there are a 3 different spatstat function for us to use to determine the bandwidth, called bw.CvL, bw.scott and bw.ppl. And also kernel needs to be determined as well (I will be using the default “Gaussian”.\nAccording to research by Prof, it was suggested that bw.ppl() is more appropriate to use, when patterns consist predominantly of tight cluster. bw.diggle() is used when the we are trying to detect a single tight cluster in the midst of random noise. However, both are more commonly use.\nI have chosen to use diggle(), but results might vary if bw.ppl() is used.\n\n\nFunctional Kernal Density Map\n\nwp_functional_NGA.bw <- density(wp_functional_NGA_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(wp_functional_NGA.bw)\n\n\n\n\nNon Functional Kernal Density Map\n\nwp_nonfunctional_NGA.bw <- density(wp_nonfunctional_NGA_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(wp_nonfunctional_NGA.bw)"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#merging-water-data-point-with-osun-owin",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#merging-water-data-point-with-osun-owin",
    "title": "Take Home Exercise 1",
    "section": "Merging Water Data point with Osun Owin",
    "text": "Merging Water Data point with Osun Owin\n\nwp_functional_osun_ppp = wp_functional_ppp[osun_owin]\nwp_nonfunctional_osun_ppp = wp_nonfunctional_ppp[osun_owin]\n\n\nRescaling Data Points\n\nwp_functional_osun_ppp.km = rescale(wp_functional_osun_ppp, 1000, \"km\")\nwp_nonfunctional_osun_ppp.km = rescale(wp_nonfunctional_osun_ppp, 1000, \"km\")\n\nWe will plot a map of the functional water point of osun to take a look.\n\nplot(wp_functional_osun_ppp.km)"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#generating-kde",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#generating-kde",
    "title": "Take Home Exercise 1",
    "section": "Generating KDE",
    "text": "Generating KDE\n\nwp_nonfunctional_osun.bw <- density(wp_nonfunctional_osun_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(wp_nonfunctional_osun.bw)\n\n\n\n\n\nwp_functional_osun.bw <- density(wp_functional_osun_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(wp_functional_osun.bw)"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#converting-kde-to-raster",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#converting-kde-to-raster",
    "title": "Take Home Exercise 1",
    "section": "Converting KDE to Raster",
    "text": "Converting KDE to Raster\n\ngridded_kde_wp_functional_osun_bw <- as.SpatialGridDataFrame.im(wp_functional_osun.bw)\nspplot(gridded_kde_wp_functional_osun_bw)\n\n\n\n\n\ngridded_kde_wp_nonfunctional_osun_bw <- as.SpatialGridDataFrame.im(wp_nonfunctional_osun.bw)\nspplot(gridded_kde_wp_nonfunctional_osun_bw)\n\n\n\n\n\nkde_wp_functional_osun_bw_raster <- raster(gridded_kde_wp_functional_osun_bw)\nkde_wp_nonfunctional_osun_bw_raster <- raster(gridded_kde_wp_nonfunctional_osun_bw)\n\n\nprojection(kde_wp_functional_osun_bw_raster) <- CRS(\"+init=EPSG:26393\")\nprojection(kde_wp_nonfunctional_osun_bw_raster) <- CRS(\"+init=EPSG:26393\")\n\n\nkde_wp_functional_osun_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.8948485, 0.9616045  (x, y)\nextent     : 176.5032, 291.0438, 331.4347, 454.5201  (xmin, xmax, ymin, ymax)\ncrs        : +init=EPSG:26393 \nsource     : memory\nnames      : v \nvalues     : -4.876249e-15, 25.49435  (min, max)"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#plotting-kde-of-osun",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#plotting-kde-of-osun",
    "title": "Take Home Exercise 1",
    "section": "Plotting KDE of Osun",
    "text": "Plotting KDE of Osun\n\ntm_shape(kde_wp_functional_osun_bw_raster) + \n    tm_layout(main.title = \"KDE of Functional Water Point (Osun)\") +\n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\nVariable(s) \"v\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\ntm_shape(kde_wp_nonfunctional_osun_bw_raster) + \n    tm_layout(main.title = \"KDE of Non Functional Water Point (Osun)\") +\n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\nVariable(s) \"v\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#functional",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#functional",
    "title": "Take Home Exercise 1",
    "section": "Functional",
    "text": "Functional\n{#|eval: false} {r} #| execute: false L_fun_osun = Lest(wp_functional_osun_ppp.km , correction = \"Ripley\") plot(L_fun_osun, . -r ~ r,       ylab= \"L(d)-r\", xlab = \"d(m)\")\n```{#|eval: false} {r} L_fun_osun.csr <- envelope(wp_functional_osun_ppp.km, Lest, nsim = 39, rank = 1, glocal=TRUE)\n```{#|eval: false}\n{r}\nplot(L_fun_osun.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#non-ffunctional",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#non-ffunctional",
    "title": "Take Home Exercise 1",
    "section": "Non FFunctional",
    "text": "Non FFunctional\n```{#|eval: false} {r} L_non_fun_osun = Lest(wp_nonfunctional_osun_ppp.km , correction = “Ripley”) plot(L_non_fun_osun, . -r ~ r, ylab= “L(d)-r”, xlab = “d(m)”)\n```{#|eval: false}\n{r}\nL_non_fun_osun.csr <- envelope(wp_nonfunctional_osun_ppp.km , Lest, nsim = 39, rank = 1, glocal=TRUE)\n```{#|eval: false} {r} #| execute: false plot(L_non_fun_osun.csr, . - r ~ r, xlab=“d”, ylab=“L(d)-r”)\n```"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#comparison-between-kernel-density-map-and-point-map.",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#comparison-between-kernel-density-map-and-point-map.",
    "title": "Take Home Exercise 1",
    "section": "Comparison between Kernel Density Map and Point Map.",
    "text": "Comparison between Kernel Density Map and Point Map.\n\nKernel Density Map are better at spotting trends as compared to Point Map\nKernal Density Map are much better at spotting trends as compared to that of the point map. A Point map will highlight each individual water point out and this can be difficult for us to determine any trend at all.\nWith reference to the map in Mapping the Functional and Non Functional Points, there seems to be almost no difference in the density of the water points in the area, or at the very least it is difficult to tell. A Kernel Density Map solve this by smoothing over the points and providing a density number, whereas for Point Map, we can only observed the areas based on the number of points. T\nKernel Density Map provides a Quantitative Value as compared to the Qualitative observation of Point Map in detecting trends.\n\n\nKernal Density Map are less computationally intensive to display as compared to Point Map in an interactive map\nA Point Map with it thousands of points is more computationally intensive to display are compared to Kernal Density Map. This is because the computer would need to take note of every individual point and plot it out which would be an issue for computers with low computational power.\n\n\nKernel Density Map is able to provide an estimation of the concentration of points.\nKernel Density takes into account the inverse-distance weighted counts of the existing point to estimate the concentration of points in an given area. This means that the estimated cells values are derived based on the weights of the existing points, with the furthest points having the lowest weights. This process in turns smooth the density generated and can help to give a more pronounced gradient.\nFind out more about Inverse Distance Weighted here."
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#computing-g-function",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#computing-g-function",
    "title": "Take Home Exercise 1",
    "section": "Computing G Function",
    "text": "Computing G Function\nNow that we have extracted the dataset for the 3 cities and converted it into ppp format we can now perform our 2nd Order Spatial Analysis on them.\nFor this we have chose to use G Function to test our Hypothesis. As stated by our Professor, G Function is a measure of the distribution from an arbitrary event to its nearest event. It estimates the nearest neighbour distance distribution from a point pattern in a window of arbitrary shape. It is recommended that G Function is a useful statistic summarising one aspect of the ``clustering’’ of points. As such we will make use of G Function to test our Hypothesis on whether the points are randomly distributed or not.\nFor us to perform G Function Analysis we will be making use of Gest() Function from spatstat. Find out more about Gest() from spatstat here. To further confirm our Hypothesis we would need to perform a Monte Carlo Simulation Test with G Function to test our Hypothesis.\n\nIwo\n\nComputing G_Function Estimation for Functional Water Point\n\nG_iwo = Gest(wp_functional_iwo_ppp.km, correction = \"border\")\nplot(G_iwo)\n\n\n\n\n\n\nTesting the Hypothesis of Functional Water Point\nOur Hypothesis:\n\nH0: The distribution of the Functional Water Points in Iwo are randomly distributed\nH1: The distribution of the Functional Water Points in Iwo are not randomly distributed\nConfidence level : 99%\nSignificance level : 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.01.\n\n\nG_iwo_fuctional.csr <- envelope(wp_functional_iwo_ppp.km, Gest, nsim=100)\n\nGenerating 100 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,  100.\n\nDone.\n\n\n\nplot(G_iwo_fuctional.csr)\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nConclusion: The observed G(r) is far above the G(theo) as well as the envelope - indicating that Functional Water Point in the Iwo area are clustered. Hence, we reject the null hypothesis that Functional Water Point in the Iwo area are randomly distributed at 99% confident interval.\n\n\n\n\nComputing G_Fuction Estimate for Non Functional Water Point\n\nG_iwo_non = Gest(wp_nonfunctional_iwo_ppp.km, correction = \"border\")\nplot(G_iwo_non)\n\n\n\n\n\n\nTesting the Hypothesis of Non Functional Water Point\nOur Hypothesis:\n\nH0: The distribution of the Non Functional Water Points in Iwo are randomly distributed\nH1: The distribution of the Non Functional Water Points in Iwo are not randomly distributed\nConfidence level : 99%\nSignificance level : 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.01.\n\n\nG_iwo_nonfuctional.csr <- envelope(wp_nonfunctional_iwo_ppp.km, Gest, nsim=100)\n\nGenerating 100 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,  100.\n\nDone.\n\n\n\nplot(G_iwo_nonfuctional.csr)\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nConclusion: The observed G(r) is far above the G(theo) as well as the envelope - indicating that Non Functional Water Point in the Iwo area are clustered. Hence, we reject the null hypothesis that Non Functional Water Point in the Iwo area are randomly distributed at 99% confident interval.\n\n\n\n\n\nOsogbo\n\nComputing G-Fuction Estimate of Functional Water Point\n\nG_osogbo = Gest(wp_functional_osogbo_ppp.km, correction = \"border\")\nplot(G_osogbo)\n\n\n\n\n\n\nTesting the Hypothesis of Functional Water Point\nOur Hypothesis:\n\nH0: The distribution of the Functional Water Points in Osogbo are randomly distributed\nH1: The distribution of the Functional Water Points in Osogbo are not randomly distributed\nConfidence level : 99%\nSignificance level : 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.01.\n\n\nG_osogbo_fuctional.csr <- envelope(wp_functional_osogbo_ppp.km, Gest, nsim=100)\n\nGenerating 100 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,  100.\n\nDone.\n\n\n\nplot(G_osogbo_fuctional.csr)\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nConclusion: The observed G(r) is far above the G(theo) as well as the envelope - indicating that Functional Water Point in the Osogbo area are clustered. Hence, we reject the null hypothesis that Functional Water Point in the Osogbo area are randomly distributed at 99% confident interval.\n\n\n\n\nComputing G_Function Estimate for Non Functional Water Point\n\nG_osogbo_non = Gest(wp_nonfunctional_osogbo_ppp.km, correction = \"border\")\nplot(G_osogbo_non)\n\n\n\n\n\n\nTesting the Hypothesis of Non Functional Water Point\nOur Hypothesis:\n\nH0: The distribution of the Non Functional Water Points in Osogbo are randomly distributed\nH1: The distribution of the Non Functional Water Points in Osogbo are not randomly distributed\nConfidence level : 99%\nSignificance level : 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.01.\n\n\nG_osogbo_nonfuctional.csr <- envelope(wp_nonfunctional_osogbo_ppp.km, Gest, nsim=100)\n\nGenerating 100 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,  100.\n\nDone.\n\n\n\nplot(G_osogbo_nonfuctional.csr)\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nConclusion: The observed G(r) is far above the G(theo) as well as the envelope - indicating that Non Functional Water Point in the Osobo area are clustered. Hence, we reject the null hypothesis that Non Functional Water Point in the Osobo area are randomly distributed at 99% confident interval.\n\n\n\n\n\nEde\n\nComputing G_Function Estimate for Functional Water Point\n\nG_ede = Gest(wp_functional_ede_ppp.km, correction = \"border\")\nplot(G_ede)\n\n\n\n\n\n\nTesting the Hypothesis of Functional Water Point\nOur Hypothesis:\n\nH0: The distribution of the Functional Water Points in Ede are randomly distributed\nH1: The distribution of the Functional Water Points in Ede are not randomly distributed\nConfidence level : 99%\nSignificance level : 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.01.\n\n\nG_ede_fuctional.csr <- envelope(wp_functional_ede_ppp.km, Gest, nsim=100)\n\nGenerating 100 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,  100.\n\nDone.\n\n\n\nplot(G_ede_fuctional.csr)\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nConclusion: The observed G(r) is far above the G(theo) as well as the envelope - indicating that Functional Water Point in the Ede area are clustered. Hence, we reject the null hypothesis that Functional Water Point in the Ede area are randomly distributed at 99% confident interval.\n\n\n\n\nComputing G_Function Estimate for Non Functional Water Point\n\nG_ede_non = Gest(wp_nonfunctional_ede_ppp.km, correction = \"border\")\nplot(G_ede_non)\n\n\n\n\n\n\nTesting the Hypothesis of Non Functional Water Point\nOur Hypothesis:\n\nH0: The distribution of the Non Functional Water Points in Ede are randomly distributed\nH1: The distribution of the Non Functional Water Points in Ede are not randomly distributed\nConfidence level : 99%\nSignificance level : 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.01.\n\n\nG_ede_nonfuctional.csr <- envelope(wp_nonfunctional_ede_ppp.km, Gest, nsim=100)\n\nGenerating 100 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,  100.\n\nDone.\n\n\n\nplot(G_ede_nonfuctional.csr)\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nConclusion: The observed G(r) is far above the G(theo) as well as the envelope - indicating that Non Functional Water Point in the Ede area are clustered. Hence, we reject the null hypothesis that Non Functional Water Point in the Ede area are randomly distributed at 99% confident interval.\n\n\n\n\n\nOsun\n\nComputing G_Function Estimate for Functional Water Point\n\nG_osun = Gest(wp_functional_osun_ppp.km, correction = \"border\") \nplot(G_osun)\n\n\n\n\n\n\nTesting the Hypothesis for Functional Water Point\nOur Hypothesis:\n\nH0: The distribution of the Functional Water Points in Osun are randomly distributed\nH1: The distribution of the Functional Water Points in Osun are not randomly distributed\nConfidence level : 99%\nSignificance level : 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.01.\n\n\nG_osun_fuctional.csr <- envelope(wp_functional_osun_ppp.km, Gest, nsim=100)\n\nGenerating 100 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,  100.\n\nDone.\n\n\n\nplot(G_osun_fuctional.csr)\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nConclusion: The observed G(r) is far above the G(theo) as well as the envelope - indicating that Functional Water Point in the Osun area are clustered. Hence, we reject the null hypothesis that Functional Water Point in the Osun area are randomly distributed at 99% confident interval.\n\n\n\n\nComputing G_Function Estimate for Non Functional Water Point\n\nG_osun_non = Gest(wp_nonfunctional_osun_ppp.km, correction = \"border\") \nplot(G_osun_non)\n\n\n\n\n\n\nHypothesis Testing For Non Functional Water Point\nOur Hypothesis:\n\nH0: The distribution of the Non Functional Water Points in Osun are randomly distributed\nH1: The distribution of the Non Functional Water Points in Osun are not randomly distributed\nConfidence level : 99%\nSignificance level : 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.01.\n\n\nG_osun_nonfuctional.csr <- envelope(wp_nonfunctional_osun_ppp.km, Gest, nsim=100)\n\nGenerating 100 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,  100.\n\nDone.\n\n\n\nplot(G_osun_nonfuctional.csr)\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nConclusion: The observed G(r) is far above the G(theo) as well as the envelope - indicating that Non Functional Water Point in the Osun area are clustered. Hence, we reject the null hypothesis that Functional Water Point in the Osun area are randomly distributed at 99% confident interval."
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#conclusion-for-2nd-order-spatial-point-analysis",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#conclusion-for-2nd-order-spatial-point-analysis",
    "title": "Take Home Exercise 1",
    "section": "Conclusion for 2nd Order Spatial Point Analysis",
    "text": "Conclusion for 2nd Order Spatial Point Analysis\n\nAreas with High Functional Water Point and Non Functional Water Point are clustered together in the cities in Osun\nBased on our G Function Analysis, since we have determined that both the Functional Water Point and the Non Functional Point are not randomly distributed at 99% Confidence interval in Osun. Hence, we can determine that they are clusted together\n\n\nFunctional and Non Functional Water Point are clustered together in cities of Osun\nBased on our G Function Analysis, since we have determined that both the Functional Water Point and the Non Functional Point are not randomly distributed at 99% Confidence interval in 3 main cities Iwo, Osogbo and Ede. Hence, we can determine that they are clusted together"
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#computing-l-function",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#computing-l-function",
    "title": "Take Home Exercise 1",
    "section": "Computing L Function",
    "text": "Computing L Function\nIn order to test for Correlation we would need to perform a K Function. K function is a popular technique for analyzing spatial correlation in point patterns. It measures the number of events found up to a given distance of any particular event, according to Prof. This makes it perfect for testing for Spatial Correlation Analysis.\nHowever,K Function makes it difficult for us to discern difference between the Theortical K and Predicted K at lower values, as such we will be making use of the L Function instead. L Function is a transformation of K Function before applying a square root transformation, which theoretical stabilised the variance of the estimator.\nFor us to perform L Function Analysis we will be making use of Lest() Function from spatstat. Find out more about Lest() Function from spatstat here. To further confirm our Hypothesis we would need to perform a Monte Carlo Simulation Test with G Function to test our Hypothesis.\n\nFunctional Water Point\n\nComputing L Function Estimate\n\nL_fun_osun = Lest(wp_functional_osun_ppp.km, correction = \"Ripley\")\nplot(L_fun_osun, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d\")\n\n\n\n\nTesting the Hypothesis on Functional Water Point\nOur Hypothesis:\n\nH0: The distribution of the Functional Water Points in Osun are independent of each other\nH1: The distribution of the Functional Water Points in Osun are not independent of each other\nConfidence level : 95%\nSignificance level : 0.05\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.05.\n\n\nL_fun_osun.csr <- envelope(wp_functional_osun_ppp.km, Lest, nsim = 39, rank = 1, glocal=TRUE)\n\n\nplot(L_fun_osun.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\n\nImportant\n\n\n\nConclusion: The observed L(r)-r(obs) is far above the L(r)-r(theo) as well as the envelope for almost all distance of d- indicating that Functional Water Point in the Osun are not independent of each other. Hence, we reject the null hypothesis that Functional Water Point in the Osun are independent of each other at all distance of d at 95% confidence interval.\n\n\n\n\n\nNon Functional Water Point\n\nComputing L Function Estimate\n\nL_non_fun_osun = Lest(wp_nonfunctional_osun_ppp.km, correction = \"Ripley\")\nplot(L_non_fun_osun, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d\")\n\n\n\n\nTesting the Hypothesis of Non Functional Water Point\nOur Hypothesis:\n\nH0: The distribution of the Non Functional Water Points in Osun are independent of each other\nH1: The distribution of the Non Functional Water Points in Osun are not independent of each other\nConfidence level : 95%\nSignificance level : 0.05\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.05.\n\n\nL_non_fun_osun.csr <- envelope(wp_nonfunctional_osun_ppp.km, Lest, nsim = 39, rank = 1, glocal=TRUE)\n\n\nplot(L_non_fun_osun.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\n\nImportant\n\n\n\nConclusion: The observed L(r)-r(obs) is far above the L(r)-r(theo) as well as the envelope for almost all distance of d- indicating that Non Functional Water Point in the Osun are not independent of each other. Hence, we reject the null hypothesis that Non Functional Water Point in the Osun are independent of each other at all distance of d at 95% confidence interval."
  },
  {
    "objectID": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#conclusion",
    "href": "lessons/Take-home/Take-home_ex1/Take-home_ex1.html#conclusion",
    "title": "Take Home Exercise 1",
    "section": "Conclusion",
    "text": "Conclusion\n\nFunctional Water Point are not independent of each other in the State of Osun\nBased on the Conclusion of L Function Test, we need to reject the null hypothesis that Functional Water Point in the Osun are independent of each other at all distance of d at 95% confidence interval, therefore we can conclude that Functional Water Point in the Osun area are not independent of each other.\n\n\nNon Functional Water Point are not independent of each other in the State of Osun\nBased on the Conclusion of L Function Test, we need to reject the null hypothesis that Non Functional Water Point in the Osun are independent of each other at all distance of d at 95% confidence interval, therefore we can conclude that Functional Water Point in the Osun area are not independent of each other."
  },
  {
    "objectID": "lessons/In-class/in-class_ex6/In-class_Ex06.html",
    "href": "lessons/In-class/in-class_ex6/In-class_Ex06.html",
    "title": "In Class Exercise 6",
    "section": "",
    "text": "Important\n\n\n\nWe will be using sfdep in In-Class-Excercise instead of spded in Hands On Excercise"
  },
  {
    "objectID": "lessons/In-class/in-class_ex6/In-class_Ex06.html#importing-the-geospatial-data",
    "href": "lessons/In-class/in-class_ex6/In-class_Ex06.html#importing-the-geospatial-data",
    "title": "In Class Exercise 6",
    "section": "2.1 Importing the Geospatial data",
    "text": "2.1 Importing the Geospatial data\n\n\n\n\n\n\nNote\n\n\n\nThis file is loaded as a sf dataframe\n\n\n\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\hxchen-2019\\birdie\\lessons\\In-class\\in-class_ex6\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "lessons/In-class/in-class_ex6/In-class_Ex06.html#importing-geospatial",
    "href": "lessons/In-class/in-class_ex6/In-class_Ex06.html#importing-geospatial",
    "title": "In Class Exercise 6",
    "section": "2.2 Importing GeoSpatial",
    "text": "2.2 Importing GeoSpatial\n\n\n\n\n\n\nNote\n\n\n\nThis input is recorded as tibble dataframe\n\n\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n2.2.1 Combining both data frame by using left join\n\n\n\n\n\n\nNote\n\n\n\nIn order to retain the geospatial properties, the left data frame must be the sf data frame.\nWe need to make sure that the name is the same, it is Case-Sensitive!!\n\n\n\nhunan_GDPPC <- left_join(hunan,hunan2012)%>%\n  select(1:4, 7, 15)\n\n\n\n2.2.2 Plotting a Choropleth map\n\ntmap_mode(\"plot\") \ntm_shape(hunan_GDPPC) +\n  tm_fill(\"GDPPC\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"GDPPC\") +\n  tm_layout(main.title = \"Distribution of GDP per capita by district, Hunan Province\", \n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)"
  },
  {
    "objectID": "lessons/In-class/in-class_ex6/In-class_Ex06.html#identify-area-neighbours",
    "href": "lessons/In-class/in-class_ex6/In-class_Ex06.html#identify-area-neighbours",
    "title": "In Class Exercise 6",
    "section": "2.3 Identify area Neighbours",
    "text": "2.3 Identify area Neighbours\n\n2.3.1 Calculating Contiguit neighbour methods\n\n\n\n\n\n\nNote\n\n\n\nThe code junk below uses st_contiguity is used to derive a contiguity neighbour list using Queen’s method.\nThe code chunk below will store the results into a new sf data frame at the first column (.before = 1_\n\n\n\ncn_queen <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry), \n         .before = 1)\n\n\ncn_rook <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry), \n         queen = FALSE,\n         .before = 1)"
  },
  {
    "objectID": "lessons/In-class/in-class_ex6/In-class_Ex06.html#computing-contiguity-weights",
    "href": "lessons/In-class/in-class_ex6/In-class_Ex06.html#computing-contiguity-weights",
    "title": "In Class Exercise 6",
    "section": "2.4 Computing contiguity weights",
    "text": "2.4 Computing contiguity weights\n\n2.4.1 Queens Method\n\nwm_q <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry), \n         wt = st_weights(nb),\n         .before = 1)\n\n\n\n2.4.2 Rooks Method\n\nwm_r <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry), \n         queen = FALSE,\n         wt = st_weights(nb),\n         .before = 1)"
  }
]