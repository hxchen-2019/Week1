---
title: "In Class Exercise 6"
author: "Hao Xian"
date: "13 February 2023"
date-modified: '`r Sys.Date()`'
format: html
number-sections: true
execute: 
  echo: true
  eval: true
  message: false
  warning: false
  
editor: visual
---

::: callout-important
We will be using sfdep in In-Class-Excercise instead of spded in Hands On Excercise
:::

# Loading the packages

```{r}
pacman::p_load(sf, tmap, sfdep, tidyverse)
```

# The data

## Importing the Geospatial data

::: callout-note
This file is loaded as a sf dataframe
:::

```{r}
hunan <- st_read(dsn = "data/geospatial", 
                 layer = "Hunan")
```

## Importing GeoSpatial

::: callout-note
This input is recorded as tibble dataframe
:::

```{r}
hunan2012 <- read_csv("data/aspatial/Hunan_2012.csv")
```

### Combining both data frame by using left join

::: callout-note
In order to retain the geospatial properties, the left data frame must be the sf data frame.

We need to make sure that the name is the same, it is Case-Sensitive!!
:::

```{r}
hunan_GDPPC <- left_join(hunan,hunan2012)%>%
  select(1:4, 7, 15)
```

### Plotting a Choropleth map

```{r}
tmap_mode("plot") 
tm_shape(hunan_GDPPC) +
  tm_fill("GDPPC",
          style = "quantile",
          palette = "Blues",
          title = "GDPPC") +
  tm_layout(main.title = "Distribution of GDP per capita by district, Hunan Province", 
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45,
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha = 0.2)
```

## Identify area Neighbours

### Calculating Contiguit neighbour methods

::: callout-note
The code junk below uses st_contiguity is used to derive a contiguity neighbour list using Queen's method.

The code chunk below will store the results into a new sf data frame at the first column (.before = 1\_
:::

```{r}
cn_queen <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry), 
         .before = 1)
```

```{r}
cn_rook <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry), 
         queen = FALSE,
         .before = 1)
```

## Computing contiguity weights

### Queens Method

```{r}
wm_q <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry), 
         wt = st_weights(nb),
         .before = 1)
```

### Rooks Method

```{r}
wm_r <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry), 
         queen = FALSE,
         wt = st_weights(nb),
         .before = 1)
```
