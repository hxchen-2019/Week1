---
title: "In Class Excercise 3"
date: "25 January 2023"
date-modified: '`r Sys.Date()`'
format: html
number-sections: true

execute: 
  echo: true
  eval: true
  message: false
  warning: false
  
editor: visual
---


## Loading the Packages


```{r}
pacman::p_load(tmap,tidyverse,sf)
```


## Importing the data


```{r}
NGA_wp <- read_rds("data/rds/NGA_wp.rds")
```


## Basic Mapping

### Visualisization

::: callout-note
tm_shape is to access shape, it will not give a picture of the map. tm_fill and tm_border is used to draw the shape og the map
:::


```{r}
p1 <- tm_shape(NGA_wp) +
  tm_fill("wp_functional",
          n = 10,
          style = "equal",
          palette = "Blues") +
  tm_borders(lwd = 0.1,
             alpha = 1) +
  tm_layout(main.title = "Distribution of functional water point by LGAs",
            legend.outside = TRUE)

p1
```

```{r}
p2 <- tm_shape(NGA_wp) +
  tm_fill("total_wp",
          n = 10,
          style = "equal",
          palette = "Greens") +
  tm_borders(lwd = 0.1,
             alpha = 1) +
  tm_layout(main.title = "Distribution of total water point by LGAs",
            legend.outside = TRUE)

p2
```

```{r}
tmap_arrange(p2, p1, nrow=1)
```


## Plotting Map of Rate

::: callout-note
Calculating Rate
:::


```{r}
NGA_wp <- NGA_wp %>%
  mutate(pct_functional = wp_functional/total_wp) %>%
  mutate(pct_nonfunctional = non_functional/total_wp)
```

```{r}
p3 <- tm_shape(NGA_wp) +
  tm_fill("pct_functional",
          n = 10,
          style = "equal",
          palette = "Purples") +
  tm_borders(lwd = 0.1,
             alpha = 1) +
  tm_layout(main.title = "Rate Map of water point by LGAs",
            legend.outside = TRUE)

p3
```

```{r}
p4 <- tm_shape(NGA_wp) +
  tm_fill("pct_nonfunctional",
          n = 10,
          style = "equal",
          palette = "Reds") +
  tm_borders(lwd = 0.1,
             alpha = 1) +
  tm_layout(main.title = "Rate Map of Non Functional water point by LGAs",
            legend.outside = TRUE)

p4
```

```{r}
tmap_arrange(p4, p3, nrow=1)
```


## Extreme Values Maps

### Percentile Map

::: callout-note
This is a map with sizx specific catergories. Breakpoints can be dervied bym means of the base R quanbtile command, passing an explicit vector of cumulative probabilities. the start and end point must be included
:::

#### Data Preperation

Step 1: Exclude records with NA


```{r}
NGA_wp <- NGA_wp %>%
  drop_na()
```


Step 2: Creating customised classification and extracting the values

::: callout-note
st_set_geometry must be set to null otherwise there will be an issue with the code chunk
:::


```{r}
percent <- c(0,.01,.1,.5,.9,.99,1)
var <- NGA_wp["pct_functional"] %>%
  st_set_geometry(NULL)
quantile(var[,1], percent)
```


#### Creating Functions

::: callout-note
Function to get name
:::


```{r}
get.var <- function(vname, df){
  v <- df[vname] %>%
    st_set_geometry(NULL)
  v <- unname(v[,1])
  return(v)
}
```


::: callout-note
Creating Functions to draw maps out
:::


```{r}
percentmap <- function(vnam, df, legtitle=NA, mtitle="Percentile Map"){
  percent <- c(0,.01,.1,.5,.9,.99,1)
  var <- get.var(vnam,df)
  bperc <- quantile(var, percent)
  tm_shape(df) +
    tm_polygons() +
    tm_shape(df) +
    tm_fill(vnam,
            title= legtitle,
            breaks = bperc,
            palette="Yellows",
            labels = c("< 1%", "1% - 10%", "10% - 50%", "50% - 90%", "90% to 99%", "99% to 100%")) +
    tm_borders() +
    tm_layout(main.title = mtitle,
              title.position = c("right", "bottom"))
  
}
```


#### Plotting the Map

